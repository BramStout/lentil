case Schneider_anamorphic_2001_31mm:
{
out[0] =  + 38.1292 *dx + 0.609883 *x + 1.87968 *dx*lambda + 0.0437844 *x*lambda + -17.76 *dx*lens_ipow(dy, 2) + -22.2757 *lens_ipow(dx, 3) + -0.243603 *y*dx*dy + -0.765068 *x*lens_ipow(dx, 2) + -0.0163891 *lens_ipow(x, 2)*dx + -0.000209958 *lens_ipow(x, 3) + -5.55513e-05 *lens_ipow(y, 4)*dx + -0.00342574 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000172488 *x*lens_ipow(y, 3)*dy + -2.95078e-06 *x*lens_ipow(y, 4) + -0.00139012 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -5.71781e-07 *lens_ipow(x, 6)*dx + -4.77639e-09 *lens_ipow(x, 7) + -4.51097e-05 *lens_ipow(y, 5)*dx*dy*lambda + 5.10669e-09 *x*lens_ipow(y, 6)*lambda + -7.04006e-10 *lens_ipow(x, 2)*lens_ipow(y, 6)*dx + -1.84303e-07 *lens_ipow(x, 7)*lens_ipow(dx, 2) + -3.3471e-09 *lens_ipow(x, 7)*y*dy + -5.91817e-11 *lens_ipow(x, 7)*lens_ipow(y, 2) + -9.8157e-10 *lens_ipow(x, 8)*dx + -1.1835e-05 *lens_ipow(y, 6)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.36608e-08 *lens_ipow(x, 8)*lens_ipow(dx, 3) + -7.06675e-10 *lens_ipow(x, 8)*y*dx*dy + -1.34421e-11 *lens_ipow(x, 8)*lens_ipow(y, 2)*dx;
out[1] =  + 37.2218 *dy + 0.600366 *y + 2.57287 *dy*lambda + 0.0506333 *y*lambda + -0.219304 *y*lens_ipow(dx, 2) + -0.00011761 *lens_ipow(y, 3) + -0.0076665 *x*y*dx + -0.00300007 *lens_ipow(x, 2)*dy + -0.0178301 *lens_ipow(y, 2)*dy*lambda + -176.653 *lens_ipow(dx, 4)*dy + -4.59828 *x*lens_ipow(dx, 3)*dy + -7.39776e-05 *x*lens_ipow(y, 3)*dx + -3.03696e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.28209e-06 *lens_ipow(x, 4)*y + -285.885 *lens_ipow(dy, 5)*lambda + -363.426 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 0.403648 *x*y*dx*lens_ipow(dy, 2)*lambda + -18.2665 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -0.00866947 *lens_ipow(y, 3)*lens_ipow(dx, 4) + -5.59834e-09 *lens_ipow(y, 7) + -4.94397e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -2.56829e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -1.74027e-07 *lens_ipow(x, 5)*y*dx + -1.69844e-06 *lens_ipow(y, 6)*dy*lambda + -6.45941e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy*lambda + 0.000314963 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 4) + -0.000164985 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.0118865 *lens_ipow(y, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 4);
out[2] =  + 0.22924 *dx + -0.0230885 *x + 0.00175023 *x*lambda + -0.258797 *dx*lens_ipow(dy, 2) + -4.54996e-06 *lens_ipow(x, 3) + -0.00445774 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.000160878 *lens_ipow(y, 3)*dx*dy + -1.8326e-06 *lens_ipow(y, 4)*dx + -0.000392075 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -9.30842e-08 *x*lens_ipow(y, 4) + -0.00823111 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.000457644 *lens_ipow(x, 2)*y*dx*dy + -1.5217e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -0.000189445 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -9.73534e-06 *lens_ipow(x, 3)*y*dy + -2.2772e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + -8.75598 *lens_ipow(dx, 5)*lambda + -0.440931 *x*lens_ipow(dx, 4)*lambda + -1.26107e-05 *x*lens_ipow(y, 3)*dy*lambda + -0.000164687 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -6.52469e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -9.76237e-08 *lens_ipow(x, 6)*dx + -7.08719e-10 *lens_ipow(x, 7) + -0.000783663 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 4.33115e-10 *lens_ipow(x, 7)*lambda + -0.00540482 *lens_ipow(x, 3)*lens_ipow(dx, 6) + 2.66953e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 6.68551e-08 *lens_ipow(x, 6)*dx*lens_ipow(lambda, 3);
out[3] =  + 0.247936 *dy + -0.0228907 *y + 0.00208052 *y*lambda + -0.62217 *lens_ipow(dx, 2)*dy + -0.0010962 *lens_ipow(y, 2)*dy + -1.04232e-05 *lens_ipow(y, 3) + -0.0265569 *x*dx*dy + -0.000370374 *lens_ipow(x, 2)*dy + -1.45706 *lens_ipow(dy, 3)*lambda + -0.0893952 *y*lens_ipow(dy, 2)*lambda + 0.0540778 *dy*lens_ipow(lambda, 4) + -0.000185895 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00018196 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -9.44931e-06 *x*lens_ipow(y, 3)*dx + -1.83586e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.04353e-07 *lens_ipow(x, 4)*y + -0.0137692 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -3.38341e-10 *lens_ipow(y, 7) + -2.90263e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + 0.00330261 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -5.43689e-08 *lens_ipow(y, 6)*dy*lambda + 0.000168133 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lambda + -3.46093e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lambda + -5.7195e-08 *lens_ipow(x, 5)*y*dx*lambda + -5.20541e-11 *lens_ipow(y, 8)*dy + -1.56519e-08 *lens_ipow(y, 7)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 8.57546e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -1.09099e-08 *lens_ipow(x, 6)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2);
out_transmittance =  + 0.522207  + 0.318465 *lambda + -0.219215 *lens_ipow(lambda, 2) + -2.31509 *lens_ipow(dy, 4) + -2.33431 *lens_ipow(dx, 4) + -0.201251 *y*lens_ipow(dy, 3) + -0.00833153 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000136104 *lens_ipow(y, 3)*dy + -0.109165 *x*dx*lens_ipow(dy, 2) + -0.195941 *x*lens_ipow(dx, 3) + -0.00797539 *x*y*dx*dy + -0.000150901 *x*lens_ipow(y, 2)*dx + -0.00295771 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.00959763 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.000207812 *lens_ipow(x, 2)*y*dy + -3.87231e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000153453 *lens_ipow(x, 3)*dx + -8.90028e-09 *lens_ipow(y, 6) + 0.00616213 *lens_ipow(x, 2)*lens_ipow(dx, 4) + -8.12379e-09 *lens_ipow(x, 6) + -3.21642e-05 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lambda + -7.19019e-07 *x*lens_ipow(y, 4)*dx*lambda + -3.4459e-09 *lens_ipow(y, 7)*dy + -2.45065e-09 *lens_ipow(x, 7)*dx + -1.22499e-05 *lens_ipow(y, 5)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -5.13434e-10 *lens_ipow(y, 8)*lens_ipow(dy, 2) + 2.33569e-05 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2.78134e-10 *lens_ipow(x, 8)*lens_ipow(dx, 2);
} break;
