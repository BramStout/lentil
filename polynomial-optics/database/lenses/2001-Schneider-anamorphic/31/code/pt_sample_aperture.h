case Schneider_anamorphic_2001_31mm:
{
float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  const float begin_lambda = lambda;
  pred_x =  + 38.1292 *begin_dx + 0.609883 *begin_x + 1.87968 *begin_dx*begin_lambda + 0.0437844 *begin_x*begin_lambda + -17.76 *begin_dx*lens_ipow(begin_dy, 2) + -22.2757 *lens_ipow(begin_dx, 3) + -0.243603 *begin_y*begin_dx*begin_dy + -0.765068 *begin_x*lens_ipow(begin_dx, 2) + -0.0163891 *lens_ipow(begin_x, 2)*begin_dx + -0.000209958 *lens_ipow(begin_x, 3) + -5.55513e-05 *lens_ipow(begin_y, 4)*begin_dx + -0.00342574 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.000172488 *begin_x*lens_ipow(begin_y, 3)*begin_dy + -2.95078e-06 *begin_x*lens_ipow(begin_y, 4) + -0.00139012 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -5.71781e-07 *lens_ipow(begin_x, 6)*begin_dx + -4.77639e-09 *lens_ipow(begin_x, 7) + -4.51097e-05 *lens_ipow(begin_y, 5)*begin_dx*begin_dy*begin_lambda + 5.10669e-09 *begin_x*lens_ipow(begin_y, 6)*begin_lambda + -7.04006e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 6)*begin_dx + -1.84303e-07 *lens_ipow(begin_x, 7)*lens_ipow(begin_dx, 2) + -3.3471e-09 *lens_ipow(begin_x, 7)*begin_y*begin_dy + -5.91817e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + -9.8157e-10 *lens_ipow(begin_x, 8)*begin_dx + -1.1835e-05 *lens_ipow(begin_y, 6)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -1.36608e-08 *lens_ipow(begin_x, 8)*lens_ipow(begin_dx, 3) + -7.06675e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dx*begin_dy + -1.34421e-11 *lens_ipow(begin_x, 8)*lens_ipow(begin_y, 2)*begin_dx;
  pred_y =  + 37.2218 *begin_dy + 0.600366 *begin_y + 2.57287 *begin_dy*begin_lambda + 0.0506333 *begin_y*begin_lambda + -0.219304 *begin_y*lens_ipow(begin_dx, 2) + -0.00011761 *lens_ipow(begin_y, 3) + -0.0076665 *begin_x*begin_y*begin_dx + -0.00300007 *lens_ipow(begin_x, 2)*begin_dy + -0.0178301 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -176.653 *lens_ipow(begin_dx, 4)*begin_dy + -4.59828 *begin_x*lens_ipow(begin_dx, 3)*begin_dy + -7.39776e-05 *begin_x*lens_ipow(begin_y, 3)*begin_dx + -3.03696e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -1.28209e-06 *lens_ipow(begin_x, 4)*begin_y + -285.885 *lens_ipow(begin_dy, 5)*begin_lambda + -363.426 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 0.403648 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -18.2665 *begin_y*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + -0.00866947 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + -5.59834e-09 *lens_ipow(begin_y, 7) + -4.94397e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy + -2.56829e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -1.74027e-07 *lens_ipow(begin_x, 5)*begin_y*begin_dx + -1.69844e-06 *lens_ipow(begin_y, 6)*begin_dy*begin_lambda + -6.45941e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + 0.000314963 *lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 4) + -0.000164985 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.0118865 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4);
  pred_dx =  + 0.22924 *begin_dx + -0.0230885 *begin_x + 0.00175023 *begin_x*begin_lambda + -0.258797 *begin_dx*lens_ipow(begin_dy, 2) + -4.54996e-06 *lens_ipow(begin_x, 3) + -0.00445774 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.000160878 *lens_ipow(begin_y, 3)*begin_dx*begin_dy + -1.8326e-06 *lens_ipow(begin_y, 4)*begin_dx + -0.000392075 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -9.30842e-08 *begin_x*lens_ipow(begin_y, 4) + -0.00823111 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.000457644 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -1.5217e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -0.000189445 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -9.73534e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy + -2.2772e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -8.75598 *lens_ipow(begin_dx, 5)*begin_lambda + -0.440931 *begin_x*lens_ipow(begin_dx, 4)*begin_lambda + -1.26107e-05 *begin_x*lens_ipow(begin_y, 3)*begin_dy*begin_lambda + -0.000164687 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3) + -6.52469e-06 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -9.76237e-08 *lens_ipow(begin_x, 6)*begin_dx + -7.08719e-10 *lens_ipow(begin_x, 7) + -0.000783663 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 4.33115e-10 *lens_ipow(begin_x, 7)*begin_lambda + -0.00540482 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 6) + 2.66953e-06 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + 6.68551e-08 *lens_ipow(begin_x, 6)*begin_dx*lens_ipow(begin_lambda, 3);
  pred_dy =  + 0.247936 *begin_dy + -0.0228907 *begin_y + 0.00208052 *begin_y*begin_lambda + -0.62217 *lens_ipow(begin_dx, 2)*begin_dy + -0.0010962 *lens_ipow(begin_y, 2)*begin_dy + -1.04232e-05 *lens_ipow(begin_y, 3) + -0.0265569 *begin_x*begin_dx*begin_dy + -0.000370374 *lens_ipow(begin_x, 2)*begin_dy + -1.45706 *lens_ipow(begin_dy, 3)*begin_lambda + -0.0893952 *begin_y*lens_ipow(begin_dy, 2)*begin_lambda + 0.0540778 *begin_dy*lens_ipow(begin_lambda, 4) + -0.000185895 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.00018196 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -9.44931e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + -1.83586e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -1.04353e-07 *lens_ipow(begin_x, 4)*begin_y + -0.0137692 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -3.38341e-10 *lens_ipow(begin_y, 7) + -2.90263e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + 0.00330261 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -5.43689e-08 *lens_ipow(begin_y, 6)*begin_dy*begin_lambda + 0.000168133 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -3.46093e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy*begin_lambda + -5.7195e-08 *lens_ipow(begin_x, 5)*begin_y*begin_dx*begin_lambda + -5.20541e-11 *lens_ipow(begin_y, 8)*begin_dy + -1.56519e-08 *lens_ipow(begin_y, 7)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 8.57546e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + -1.09099e-08 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 38.1292  + 1.87968 *begin_lambda + -17.76 *lens_ipow(begin_dy, 2) + -66.8272 *lens_ipow(begin_dx, 2) + -0.243603 *begin_y*begin_dy + -1.53014 *begin_x*begin_dx + -0.0163891 *lens_ipow(begin_x, 2) + -5.55513e-05 *lens_ipow(begin_y, 4) + -5.71781e-07 *lens_ipow(begin_x, 6) + -4.51097e-05 *lens_ipow(begin_y, 5)*begin_dy*begin_lambda + -7.04006e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 6) + -3.68607e-07 *lens_ipow(begin_x, 7)*begin_dx + -9.8157e-10 *lens_ipow(begin_x, 8) + -1.1835e-05 *lens_ipow(begin_y, 6)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -4.09824e-08 *lens_ipow(begin_x, 8)*lens_ipow(begin_dx, 2) + -7.06675e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dy + -1.34421e-11 *lens_ipow(begin_x, 8)*lens_ipow(begin_y, 2)+0.0f;
  dx1_domega0[0][1] =  + -35.52 *begin_dx*begin_dy + -0.243603 *begin_y*begin_dx + -0.00685148 *begin_x*lens_ipow(begin_y, 2)*begin_dy + -0.000172488 *begin_x*lens_ipow(begin_y, 3) + -0.00278024 *lens_ipow(begin_x, 3)*begin_dy + -4.51097e-05 *lens_ipow(begin_y, 5)*begin_dx*begin_lambda + -3.3471e-09 *lens_ipow(begin_x, 7)*begin_y + -2.36701e-05 *lens_ipow(begin_y, 6)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -7.06675e-10 *lens_ipow(begin_x, 8)*begin_y*begin_dx+0.0f;
  dx1_domega0[1][0] =  + -0.438608 *begin_y*begin_dx + -0.0076665 *begin_x*begin_y + -706.611 *lens_ipow(begin_dx, 3)*begin_dy + -13.7948 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -7.39776e-05 *begin_x*lens_ipow(begin_y, 3) + -726.851 *begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + 0.403648 *begin_x*begin_y*lens_ipow(begin_dy, 2)*begin_lambda + -0.0346779 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + -2.56829e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + -1.74027e-07 *lens_ipow(begin_x, 5)*begin_y+0.0f;
  dx1_domega0[1][1] =  + 37.2218  + 2.57287 *begin_lambda + -0.00300007 *lens_ipow(begin_x, 2) + -0.0178301 *lens_ipow(begin_y, 2)*begin_lambda + -176.653 *lens_ipow(begin_dx, 4) + -4.59828 *begin_x*lens_ipow(begin_dx, 3) + -1429.43 *lens_ipow(begin_dy, 4)*begin_lambda + -1090.28 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 0.807297 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + -73.0659 *begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -4.94397e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + -1.69844e-06 *lens_ipow(begin_y, 6)*begin_lambda + -6.45941e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_lambda + 0.000314963 *lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 4) + -0.000329969 *lens_ipow(begin_y, 5)*begin_dy*lens_ipow(begin_lambda, 2) + -0.0356594 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
