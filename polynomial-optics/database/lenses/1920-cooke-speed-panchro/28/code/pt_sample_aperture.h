case cooke__speed_panchro__1920__28mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 19.8129 *begin_dx + 0.640924 *begin_x + 0.0965361 *begin_x*begin_lambda + 1.50609 *begin_dx*begin_lambda + -0.48781 *begin_y*begin_dx*begin_dy + -0.00324407 *begin_x*begin_y*begin_dy + -15.391 *lens_ipow(begin_dx, 3) + -0.067604 *begin_x*lens_ipow(begin_lambda, 2) + -16.0199 *begin_dx*lens_ipow(begin_dy, 2) + 4.38112e-05 *begin_x*lens_ipow(begin_y, 2) + 9.94036e-05 *lens_ipow(begin_x, 3) + -0.307563 *begin_x*lens_ipow(begin_dy, 2) + -0.719018 *begin_x*lens_ipow(begin_dx, 2) + -0.987495 *begin_dx*lens_ipow(begin_lambda, 3) + 2.87285e-05 *lens_ipow(begin_x, 4)*begin_dx + 0.0274781 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 3.41056 *begin_dx*lens_ipow(begin_dy, 4) + 0.105882 *begin_x*lens_ipow(begin_dy, 4) + 0.00176267 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 0.0433554 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.0245752 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*begin_lambda + -0.0375873 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 12.931 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -1.46515e-06 *lens_ipow(begin_x, 4)*begin_y*begin_dx*begin_dy + 5.00433e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -5.19912e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + 2.43356e-10 *lens_ipow(begin_x, 7)*begin_lambda + 3.60723e-08 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 3);
  pred_y =  + 0.661276 *begin_y + 19.945 *begin_dy + 1.27938 *begin_dy*begin_lambda + 0.0203018 *begin_y*begin_lambda + -0.264987 *begin_y*lens_ipow(begin_dx, 2) + -0.714263 *begin_y*lens_ipow(begin_dy, 2) + -0.357394 *begin_x*begin_dx*begin_dy + -14.8764 *lens_ipow(begin_dx, 2)*begin_dy + 0.000136979 *lens_ipow(begin_x, 2)*begin_y + -0.644039 *begin_dy*lens_ipow(begin_lambda, 2) + 0.00320034 *lens_ipow(begin_x, 2)*begin_dy + -15.5046 *lens_ipow(begin_dy, 3) + 0.00030178 *lens_ipow(begin_y, 3)*begin_lambda + -0.0186201 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.647917 *begin_x*lens_ipow(begin_dx, 3)*begin_dy + 3.67308 *lens_ipow(begin_dy, 5) + -1.04139 *begin_x*begin_dx*lens_ipow(begin_dy, 3) + -0.0124336 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 8.1868e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -0.0363426 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + -0.000249229 *lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 2) + -0.000572361 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + 0.000131582 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -4.46407e-10 *lens_ipow(begin_y, 7) + -1.29196e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 1.98165 *begin_y*lens_ipow(begin_dx, 6)*begin_lambda + -4.11886e-12 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3) + -6.23152 *begin_y*lens_ipow(begin_dx, 8)*lens_ipow(begin_lambda, 2);
  pred_dx =  + 0.476257 *begin_dx + -0.0365906 *begin_x + 0.0111251 *begin_x*begin_lambda + -0.0497343 *begin_y*begin_dx*begin_dy + -0.00164651 *begin_x*begin_y*begin_dy + -0.00268069 *lens_ipow(begin_x, 2)*begin_dx + -0.232941 *lens_ipow(begin_dx, 3) + -0.00829667 *begin_x*lens_ipow(begin_lambda, 2) + -0.277624 *begin_dx*lens_ipow(begin_dy, 2) + -5.15369e-05 *begin_x*lens_ipow(begin_y, 2) + -5.79852e-05 *lens_ipow(begin_x, 3) + -0.0255246 *begin_x*lens_ipow(begin_dy, 2) + -0.0752377 *begin_x*lens_ipow(begin_dx, 2) + -0.000931688 *lens_ipow(begin_y, 2)*begin_dx + -1.12217e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -5.76109e-08 *begin_x*lens_ipow(begin_y, 4) + 0.342106 *begin_dx*lens_ipow(begin_dy, 4) + 3.54615e-08 *begin_x*lens_ipow(begin_y, 4)*begin_lambda + -2.30495e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy*begin_lambda + 5.93539e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3) + -2.5652e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -2.76082e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + 5.36475 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -0.0118575 *begin_x*begin_y*lens_ipow(begin_dx, 4)*begin_dy + 1.34536e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2)*begin_lambda + -2.76284e-07 *lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 3) + 0.0353202 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 7) + 0.000288755 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4);
  pred_dy =  + -0.0364159 *begin_y + 0.462915 *begin_dy + 0.0104795 *begin_y*begin_lambda + -0.011083 *begin_y*lens_ipow(begin_dx, 2) + -0.0021111 *lens_ipow(begin_y, 2)*begin_dy + -0.0564893 *begin_y*lens_ipow(begin_dy, 2) + -0.000676167 *begin_x*begin_y*begin_dx + 0.417057 *lens_ipow(begin_dx, 2)*begin_dy + -0.00866235 *begin_y*lens_ipow(begin_lambda, 2) + -4.7202e-05 *lens_ipow(begin_x, 2)*begin_y + -5.87964e-05 *lens_ipow(begin_y, 3) + 1.17013e-05 *lens_ipow(begin_y, 3)*begin_lambda + 1.57266e-05 *lens_ipow(begin_x, 2)*begin_y*begin_lambda + -0.0066992 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 1.3827e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -0.455026 *begin_x*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -8.39567 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -2.30957e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + -1.73848e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -8.40796e-11 *lens_ipow(begin_x, 6)*begin_y + -4.36421e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 0.0234144 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + -0.000660313 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 3) + 0.00334 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 4)*begin_dy + -4.35779e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_lambda + 0.00068308 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -0.0742686 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -1.39546 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 19.8129  + 1.50609 *begin_lambda + -0.48781 *begin_y*begin_dy + -46.1729 *lens_ipow(begin_dx, 2) + -16.0199 *lens_ipow(begin_dy, 2) + -1.43804 *begin_x*begin_dx + -0.987495 *lens_ipow(begin_lambda, 3) + 2.87285e-05 *lens_ipow(begin_x, 4) + 0.0824344 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + 3.41056 *lens_ipow(begin_dy, 4) + 0.00352534 *lens_ipow(begin_x, 3)*begin_dx + 0.0867108 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + -0.0737255 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + -0.0375873 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 38.7931 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -1.46515e-06 *lens_ipow(begin_x, 4)*begin_y*begin_dy + -1.03982e-06 *lens_ipow(begin_x, 5)*begin_dx+0.0f;
  dx1_domega0(0, 1) =  + -0.48781 *begin_y*begin_dx + -0.00324407 *begin_x*begin_y + -32.0397 *begin_dx*begin_dy + -0.615126 *begin_x*begin_dy + 13.6422 *begin_dx*lens_ipow(begin_dy, 3) + 0.42353 *begin_x*lens_ipow(begin_dy, 3) + 0.0433554 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + -0.0751747 *lens_ipow(begin_x, 2)*begin_dx*begin_dy*begin_lambda + 25.8621 *lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + -1.46515e-06 *lens_ipow(begin_x, 4)*begin_y*begin_dx + 5.00433e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + 1.08217e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)+0.0f;
  dx1_domega0(1, 0) =  + -0.529974 *begin_y*begin_dx + -0.357394 *begin_x*begin_dy + -29.7527 *begin_dx*begin_dy + -0.0372403 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -1.94375 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -1.04139 *begin_x*lens_ipow(begin_dy, 3) + -0.0248672 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + 8.1868e-06 *lens_ipow(begin_x, 3)*begin_y + 11.8899 *begin_y*lens_ipow(begin_dx, 5)*begin_lambda + -49.8522 *begin_y*lens_ipow(begin_dx, 7)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 1) =  + 19.945  + 1.27938 *begin_lambda + -1.42853 *begin_y*begin_dy + -0.357394 *begin_x*begin_dx + -14.8764 *lens_ipow(begin_dx, 2) + -0.644039 *lens_ipow(begin_lambda, 2) + 0.00320034 *lens_ipow(begin_x, 2) + -46.5137 *lens_ipow(begin_dy, 2) + -0.0186201 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.647917 *begin_x*lens_ipow(begin_dx, 3) + 18.3654 *lens_ipow(begin_dy, 4) + -3.12418 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + -0.0124336 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.109028 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -0.00114472 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 0.000263165 *lens_ipow(begin_y, 3)*begin_dy+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
