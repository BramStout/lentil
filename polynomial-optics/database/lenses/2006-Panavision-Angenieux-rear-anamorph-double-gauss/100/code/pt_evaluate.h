case Panavision_Angenieux_rear_anamorph_double_gauss_2006_100mm:
{
out[0] =  + 136.731 *dx + 0.811708 *x + 7.46914 *dx*lambda + 0.200088 *x*lambda + -5.66095 *dx*lens_ipow(lambda, 2) + -63.2176 *dx*lens_ipow(dy, 2) + -66.3093 *lens_ipow(dx, 3) + 0.143035 *y*dx*dy + 0.00497759 *lens_ipow(y, 2)*dx + -0.150089 *x*lens_ipow(lambda, 2) + 0.486484 *x*lens_ipow(dx, 2) + 0.00576804 *x*y*dy + -0.000107763 *x*lens_ipow(y, 2) + 0.0558804 *lens_ipow(x, 2)*dx + 0.000713265 *lens_ipow(x, 3) + 5.4741e-05 *x*lens_ipow(y, 2)*lambda + 33.1918 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -282.345 *lens_ipow(dx, 5) + 0.350696 *y*dx*lens_ipow(dy, 3) + 0.0317515 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.467541 *x*lens_ipow(dy, 4) + 0.0114558 *x*y*lens_ipow(dx, 2)*dy + -1.54718e-05 *x*lens_ipow(y, 3)*dy + -2.05197e-07 *x*lens_ipow(y, 4) + 0.852303 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 0.0297665 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 0.00041326 *lens_ipow(x, 4)*dx + 2.19934e-06 *lens_ipow(x, 5);
out[1] =  + 103.31 *dy + -0.452377 *y + 0.325564 *y*lambda + -44.7778 *lens_ipow(dy, 3) + -0.223848 *y*lens_ipow(lambda, 2) + 0.398504 *y*lens_ipow(dy, 2) + -0.000423052 *lens_ipow(y, 3) + 0.0136229 *x*y*dx + 0.00204718 *lens_ipow(x, 2)*dy + -341.268 *lens_ipow(dx, 2)*dy*lambda + 1.26785 *y*lens_ipow(dx, 2)*lambda + 0.000204971 *lens_ipow(y, 3)*lambda + 0.187807 *x*dx*dy*lambda + 21.539 *lens_ipow(dy, 5) + 689.519 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -1.11564 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 1.08852 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00783211 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -0.00312346 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.000115881 *lens_ipow(y, 4)*dy + -1.31559e-06 *lens_ipow(y, 5) + -2.90606 *x*dx*lens_ipow(dy, 3) + -0.81994 *x*lens_ipow(dx, 3)*dy + 7.51068e-06 *x*lens_ipow(y, 3)*dx + -0.0253263 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -444.443 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + 0.805223 *y*lens_ipow(dy, 4)*lambda + 0.642069 *y*lens_ipow(dx, 6);
out[2] =  + -0.868809 *dx + -0.0124702 *x + 0.112677 *dx*lambda + 9.62389e-05 *x*lambda + -0.0791974 *dx*lens_ipow(lambda, 2) + 0.387579 *lens_ipow(dx, 3) + 0.000439633 *y*dx*dy + -0.000819149 *x*lens_ipow(dy, 2) + -0.00349068 *x*lens_ipow(dx, 2) + -1.49117e-05 *x*y*dy + 1.2668e-06 *x*lens_ipow(y, 2) + -0.000365165 *lens_ipow(x, 2)*dx + -3.77268e-06 *lens_ipow(x, 3) + 0.721032 *dx*lens_ipow(dy, 2)*lambda + -4.13888e-07 *x*lens_ipow(y, 2)*lambda + -0.945678 *lens_ipow(dx, 5) + -3.51589e-08 *lens_ipow(y, 4)*dx + -0.034531 *x*lens_ipow(dx, 4) + 1.01221e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -1.50645e-09 *lens_ipow(x, 5) + -2.28083 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 2.00291 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.344149 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 2.55668e-07 *lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + 0.00133549 *lens_ipow(y, 2)*lens_ipow(dx, 5)*lambda + -7.42427e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lambda + -3.75352e-10 *x*lens_ipow(y, 5)*lens_ipow(dy, 3) + 4.99752e-05 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 8);
out[3] =  + -0.646013 *dy + -0.00570658 *y + 0.0451894 *dy*lambda + -0.00839497 *y*lambda + -0.0328575 *dy*lens_ipow(lambda, 2) + 0.312562 *lens_ipow(dy, 3) + 0.484346 *lens_ipow(dx, 2)*dy + 0.0126182 *y*lens_ipow(lambda, 2) + -0.00372193 *y*lens_ipow(dx, 2) + 2.2413e-06 *lens_ipow(y, 3) + 0.00561152 *x*dx*dy + -0.000114837 *x*y*dx + 1.85609e-05 *lens_ipow(x, 2)*dy + -0.00653246 *y*lens_ipow(lambda, 3) + -6.17861e-07 *lens_ipow(y, 3)*lambda + -0.0974948 *lens_ipow(dy, 5) + 0.000344713 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 2.32861e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 6.46022e-07 *lens_ipow(y, 4)*dy + 6.55257e-09 *lens_ipow(y, 5) + 0.00395695 *x*dx*lens_ipow(dy, 3) + 5.75003e-10 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.97968e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lambda + -1.96206 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + -0.624036 *lens_ipow(dx, 6)*dy + 3.26992e-06 *lens_ipow(y, 4)*lens_ipow(dx, 4)*dy + -0.00018422 *lens_ipow(x, 2)*y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 2.84587e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 3)*dy;
out_transmittance =  + -0.080057  + 1.26306 *lambda + -2.54931 *lens_ipow(lambda, 2) + 1.01941e-05 *lens_ipow(y, 2) + 2.44755 *lens_ipow(lambda, 3) + 0.00125951 *y*dy*lambda + -0.917407 *lens_ipow(lambda, 4) + -0.134562 *lens_ipow(dy, 4) + -0.313394 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.73875 *lens_ipow(dx, 4) + -0.00102213 *y*dy*lens_ipow(lambda, 2) + -0.0149732 *y*lens_ipow(dy, 3) + -0.00102315 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000121632 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -2.81841e-05 *lens_ipow(y, 3)*dy + -2.83401e-07 *lens_ipow(y, 4) + -0.00300862 *x*dx*lens_ipow(dy, 2) + -0.0352569 *x*lens_ipow(dx, 3) + 0.00021485 *x*y*dx*dy + -0.000686094 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 2.12977e-06 *lens_ipow(x, 2)*y*dy + -7.64326e-06 *lens_ipow(x, 3)*dx + -4.53347e-08 *lens_ipow(x, 4) + -0.0614196 *lens_ipow(dx, 4)*lambda + 0.00562986 *y*lens_ipow(dy, 5)*lambda + 1.99818e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 7.80369e-08 *x*lens_ipow(y, 5)*lens_ipow(dx, 3)*dy*lambda + 7.46231e-10 *x*lens_ipow(y, 6)*lens_ipow(dx, 3)*lambda;
} break;
