case angenieux_double_gauss_9999_50mm:
{
out[0] =  + 26.6197 *dx + 7.28377 *dx*lambda + 1.08139 *x*lambda + -5.01205 *dx*lens_ipow(lambda, 2) + -14.6075 *dx*lens_ipow(dy, 2) + -15.7402 *lens_ipow(dx, 3) + -1.60964 *x*lens_ipow(lambda, 2) + -0.180071 *x*lens_ipow(dy, 2) + -0.148274 *x*lens_ipow(dx, 2) + -0.000400788 *x*lens_ipow(y, 2) + 0.00185361 *lens_ipow(x, 2)*dx + -0.00039852 *lens_ipow(x, 3) + 0.829158 *x*lens_ipow(lambda, 3) + -0.302493 *y*lens_ipow(dx, 3)*dy + 7.1982e-06 *lens_ipow(y, 4)*dx + 0.296662 *x*lens_ipow(dy, 4) + -3.36856e-07 *x*lens_ipow(y, 4) + -0.0245448 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.000970578 *lens_ipow(x, 2)*y*dx*dy + -0.000461262 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 11.7284 *lens_ipow(dx, 7) + 0.0894363 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + 0.000170292 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -1.0516e-08 *lens_ipow(x, 5)*lens_ipow(y, 2) + -1.2545e-09 *lens_ipow(x, 7) + 1.03998e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lambda + -1.94162e-07 *lens_ipow(y, 6)*lens_ipow(dx, 3) + -1.51297e-11 *lens_ipow(x, 3)*lens_ipow(y, 6);
out[1] =  + 26.6948 *dy + 7.01455 *dy*lambda + 1.13586 *y*lambda + -4.9092 *dy*lens_ipow(lambda, 2) + -15.9962 *lens_ipow(dy, 3) + -14.3695 *lens_ipow(dx, 2)*dy + -1.76618 *y*lens_ipow(lambda, 2) + -0.130576 *y*lens_ipow(dy, 2) + -0.172393 *y*lens_ipow(dx, 2) + -0.000509892 *lens_ipow(y, 3) + 0.00184984 *lens_ipow(x, 2)*dy + -0.000510953 *lens_ipow(x, 2)*y + 0.927801 *y*lens_ipow(lambda, 3) + 0.00349273 *lens_ipow(y, 2)*dy*lambda + 0.000214599 *lens_ipow(y, 3)*lambda + 0.000195456 *lens_ipow(x, 2)*y*lambda + 5.37529 *lens_ipow(dy, 5) + 0.286436 *y*lens_ipow(dx, 4) + -0.0212604 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.00053484 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 0.031169 *x*y*dx*lens_ipow(dy, 2) + -0.000804279 *x*lens_ipow(y, 2)*dx*dy + -0.00874076 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -1.33511e-09 *lens_ipow(y, 7) + -4.04232e-09 *lens_ipow(x, 2)*lens_ipow(y, 5) + -3.90863e-09 *lens_ipow(x, 4)*lens_ipow(y, 3) + -1.30944e-09 *lens_ipow(x, 6)*y + 1.51024 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 3);
out[2] =  + 0.398681 *dx + -0.0363638 *x + 0.0180832 *x*lambda + -0.472729 *dx*lens_ipow(dy, 2) + -0.49175 *lens_ipow(dx, 3) + -0.0201577 *y*dx*dy + -0.0144351 *x*lens_ipow(lambda, 2) + -0.0090353 *x*lens_ipow(dy, 2) + -0.0315266 *x*lens_ipow(dx, 2) + 0.000264107 *x*y*dy + -2.06891e-05 *x*lens_ipow(y, 2) + -3.26096e-05 *lens_ipow(x, 3) + 1.51413e-05 *lens_ipow(x, 3)*lambda + -2.60519e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -7.09764e-08 *x*lens_ipow(y, 4) + 2.34527e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 1.97031e-06 *lens_ipow(x, 4)*dx + 5.82862e-08 *x*lens_ipow(y, 4)*lambda + -1.35723e-07 *lens_ipow(y, 5)*dx*dy + 1.30794e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*dy + 7.63043e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 1.35139e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + 7.1362e-06 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -1.19816e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -4.62921e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -3.72643e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 2) + -2.17571e-13 *lens_ipow(x, 9) + -2.88068e-15 *lens_ipow(x, 3)*lens_ipow(y, 8);
out[3] =  + 0.396192 *dy + -0.0358346 *y + 0.0171271 *y*lambda + -0.485814 *lens_ipow(dy, 3) + -0.494404 *lens_ipow(dx, 2)*dy + -0.0140934 *y*lens_ipow(lambda, 2) + -0.0299414 *y*lens_ipow(dy, 2) + -0.01177 *y*lens_ipow(dx, 2) + 0.00026728 *lens_ipow(y, 2)*dy + -3.43741e-05 *lens_ipow(y, 3) + -0.0216017 *x*dx*dy + 0.000296267 *x*y*dx + -3.45233e-05 *lens_ipow(x, 2)*y + 1.82715e-05 *lens_ipow(y, 3)*lambda + 1.97249e-05 *lens_ipow(x, 2)*y*lambda + 0.00978365 *y*lens_ipow(dx, 4) + -4.50436e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -2.38915e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -9.0005e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 2.88356e-09 *lens_ipow(y, 6)*dy + 2.87698e-09 *x*lens_ipow(y, 5)*dx + -3.57622e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + 4.36136e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -1.15155e-10 *lens_ipow(x, 6)*y + -2.24323e-13 *lens_ipow(y, 9) + 1.40496e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + 1.07304e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + 3.40308e-12 *lens_ipow(x, 8)*dy;
out_transmittance =  + 0.519358  + 0.608631 *lambda + -0.840086 *lens_ipow(lambda, 2) + 0.408393 *lens_ipow(lambda, 3) + -0.162582 *lens_ipow(dy, 4) + -0.397951 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.162037 *lens_ipow(dx, 4) + -0.000376405 *y*dy*lens_ipow(lambda, 2) + 0.00490527 *y*lens_ipow(dx, 2)*dy + -0.000379349 *x*dx*lens_ipow(lambda, 2) + 0.00497295 *x*dx*lens_ipow(dy, 2) + -1.31496e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.0819828 *lens_ipow(dy, 4)*lambda + -0.0821018 *lens_ipow(dx, 4)*lambda + 0.0206413 *y*lens_ipow(dy, 5) + -6.38218e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.34634e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.92629e-10 *lens_ipow(y, 6) + 0.0209803 *x*lens_ipow(dx, 5) + 2.35775e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 2.39205e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -2.31188e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -6.40569e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -1.90736e-10 *lens_ipow(x, 6) + -2.60798e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + -9.58636 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 0.0020973 *lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.00196512 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 4);
} break;
