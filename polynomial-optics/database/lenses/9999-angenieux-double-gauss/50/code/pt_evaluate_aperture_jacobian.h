case angenieux_double_gauss_9999_50mm:
{
const float dx00 =  + 1.08139 *lambda + -1.60964 *lens_ipow(lambda, 2) + -0.180071 *lens_ipow(dy, 2) + -0.148274 *lens_ipow(dx, 2) + -0.000400788 *lens_ipow(y, 2) + 0.00370723 *x*dx + -0.00119556 *lens_ipow(x, 2) + 0.829158 *lens_ipow(lambda, 3) + 0.296662 *lens_ipow(dy, 4) + -3.36856e-07 *lens_ipow(y, 4) + -0.0490897 *x*dx*lens_ipow(dy, 2) + -0.00194116 *x*y*dx*dy + -0.00138378 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 0.000170292 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -5.25802e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -8.78149e-09 *lens_ipow(x, 6) + 5.19991e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*lambda + -4.5389e-11 *lens_ipow(x, 2)*lens_ipow(y, 6)+0.0f;
const float dx01 =  + -0.000801576 *x*y + -0.302493 *lens_ipow(dx, 3)*dy + 2.87928e-05 *lens_ipow(y, 3)*dx + -1.34742e-06 *x*lens_ipow(y, 3) + -0.000970578 *lens_ipow(x, 2)*dx*dy + 0.178873 *y*dx*lens_ipow(dy, 4) + 0.000510877 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -2.10321e-08 *lens_ipow(x, 5)*y + 2.07997e-08 *lens_ipow(x, 5)*y*lambda + -1.16497e-06 *lens_ipow(y, 5)*lens_ipow(dx, 3) + -9.07781e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)+0.0f;
const float dx02 =  + 26.6197  + 7.28377 *lambda + -5.01205 *lens_ipow(lambda, 2) + -14.6075 *lens_ipow(dy, 2) + -47.2207 *lens_ipow(dx, 2) + -0.296547 *x*dx + 0.00185361 *lens_ipow(x, 2) + -0.907479 *y*lens_ipow(dx, 2)*dy + 7.1982e-06 *lens_ipow(y, 4) + -0.0245448 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000970578 *lens_ipow(x, 2)*y*dy + -0.000922523 *lens_ipow(x, 3)*dx + 82.0987 *lens_ipow(dx, 6) + 0.0894363 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 0.000340585 *x*lens_ipow(y, 3)*dx*dy + -5.82485e-07 *lens_ipow(y, 6)*lens_ipow(dx, 2)+0.0f;
const float dx03 =  + -29.2149 *dx*dy + -0.360141 *x*dy + -0.302493 *y*lens_ipow(dx, 3) + 1.18665 *x*lens_ipow(dy, 3) + -0.0490897 *lens_ipow(x, 2)*dx*dy + -0.000970578 *lens_ipow(x, 2)*y*dx + 0.357745 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 0.000170292 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)+0.0f;
const float dx04 =  + 7.28377 *dx + 1.08139 *x + -10.0241 *dx*lambda + -3.21928 *x*lambda + 2.48747 *x*lens_ipow(lambda, 2) + 1.03998e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)+0.0f;
const float dx10 =  + 0.00369968 *x*dy + -0.00102191 *x*y + 0.000390911 *x*y*lambda + 0.031169 *y*dx*lens_ipow(dy, 2) + -0.000804279 *lens_ipow(y, 2)*dx*dy + -0.0174815 *x*lens_ipow(dy, 3) + -8.08464e-09 *x*lens_ipow(y, 5) + -1.56345e-08 *lens_ipow(x, 3)*lens_ipow(y, 3) + -7.85661e-09 *lens_ipow(x, 5)*y + 3.02047 *x*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx11 =  + 1.13586 *lambda + -1.76618 *lens_ipow(lambda, 2) + -0.130576 *lens_ipow(dy, 2) + -0.172393 *lens_ipow(dx, 2) + -0.00152968 *lens_ipow(y, 2) + -0.000510953 *lens_ipow(x, 2) + 0.927801 *lens_ipow(lambda, 3) + 0.00698547 *y*dy*lambda + 0.000643796 *lens_ipow(y, 2)*lambda + 0.000195456 *lens_ipow(x, 2)*lambda + 0.286436 *lens_ipow(dx, 4) + -0.0425207 *y*lens_ipow(dx, 2)*dy + -0.00160452 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.031169 *x*dx*lens_ipow(dy, 2) + -0.00160856 *x*y*dx*dy + -9.34574e-09 *lens_ipow(y, 6) + -2.02116e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.17259e-08 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.30944e-09 *lens_ipow(x, 6)+0.0f;
const float dx12 =  + -28.739 *dx*dy + -0.344787 *y*dx + 1.14574 *y*lens_ipow(dx, 3) + -0.0425207 *lens_ipow(y, 2)*dx*dy + 0.031169 *x*y*lens_ipow(dy, 2) + -0.000804279 *x*lens_ipow(y, 2)*dy + 6.04094 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const float dx13 =  + 26.6948  + 7.01455 *lambda + -4.9092 *lens_ipow(lambda, 2) + -47.9885 *lens_ipow(dy, 2) + -14.3695 *lens_ipow(dx, 2) + -0.261152 *y*dy + 0.00184984 *lens_ipow(x, 2) + 0.00349273 *lens_ipow(y, 2)*lambda + 26.8765 *lens_ipow(dy, 4) + -0.0212604 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.00106968 *lens_ipow(y, 3)*dy + 0.062338 *x*y*dx*dy + -0.000804279 *x*lens_ipow(y, 2)*dx + -0.0262223 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 4.53071 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2)+0.0f;
const float dx14 =  + 7.01455 *dy + 1.13586 *y + -9.81841 *dy*lambda + -3.53237 *y*lambda + 2.7834 *y*lens_ipow(lambda, 2) + 0.00349273 *lens_ipow(y, 2)*dy + 0.000214599 *lens_ipow(y, 3) + 0.000195456 *lens_ipow(x, 2)*y+0.0f;
const float dx20 =  + -0.0363638  + 0.0180832 *lambda + -0.0144351 *lens_ipow(lambda, 2) + -0.0090353 *lens_ipow(dy, 2) + -0.0315266 *lens_ipow(dx, 2) + 0.000264107 *y*dy + -2.06891e-05 *lens_ipow(y, 2) + -9.78289e-05 *lens_ipow(x, 2) + 4.54239e-05 *lens_ipow(x, 2)*lambda + -2.60519e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -7.09764e-08 *lens_ipow(y, 4) + 4.69054e-06 *x*lens_ipow(y, 2)*dx + 7.88125e-06 *lens_ipow(x, 3)*dx + 5.82862e-08 *lens_ipow(y, 4)*lambda + 3.92383e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 2.28913e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 4.05416e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + 2.85448e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -5.99081e-07 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -2.31461e-09 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.11793e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.95814e-12 *lens_ipow(x, 8) + -8.64203e-15 *lens_ipow(x, 2)*lens_ipow(y, 8)+0.0f;
const float dx21 =  + -0.0201577 *dx*dy + 0.000264107 *x*dy + -4.13782e-05 *x*y + -5.21038e-05 *x*y*lens_ipow(dy, 2) + -2.83906e-07 *x*lens_ipow(y, 3) + 4.69054e-06 *lens_ipow(x, 2)*y*dx + 2.33145e-07 *x*lens_ipow(y, 3)*lambda + -6.78616e-07 *lens_ipow(y, 4)*dx*dy + 1.30794e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + 1.52609e-07 *lens_ipow(x, 3)*y*lens_ipow(lambda, 2) + 4.05416e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + -9.25843e-10 *lens_ipow(x, 5)*y + -1.49057e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -2.30454e-14 *lens_ipow(x, 3)*lens_ipow(y, 7)+0.0f;
const float dx22 =  + 0.398681  + -0.472729 *lens_ipow(dy, 2) + -1.47525 *lens_ipow(dx, 2) + -0.0201577 *y*dy + -0.0630531 *x*dx + 2.34527e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.97031e-06 *lens_ipow(x, 4) + -1.35723e-07 *lens_ipow(y, 5)*dy + 2.61589e-05 *lens_ipow(x, 3)*y*dx*dy + 2.14086e-05 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -7.45286e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx+0.0f;
const float dx23 =  + -0.945457 *dx*dy + -0.0201577 *y*dx + -0.0180706 *x*dy + 0.000264107 *x*y + -5.21038e-05 *x*lens_ipow(y, 2)*dy + -1.35723e-07 *lens_ipow(y, 5)*dx + 1.30794e-05 *lens_ipow(x, 3)*y*lens_ipow(dx, 2) + 1.35139e-08 *lens_ipow(x, 3)*lens_ipow(y, 3) + -2.39632e-07 *lens_ipow(x, 5)*dy+0.0f;
const float dx24 =  + 0.0180832 *x + -0.0288702 *x*lambda + 1.51413e-05 *lens_ipow(x, 3) + 5.82862e-08 *x*lens_ipow(y, 4) + 1.52609e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda+0.0f;
const float dx30 =  + -0.0216017 *dx*dy + 0.000296267 *y*dx + -6.90467e-05 *x*y + 3.94497e-05 *x*y*lambda + -9.00871e-05 *x*y*lens_ipow(dy, 2) + 2.87698e-09 *lens_ipow(y, 5)*dx + -7.15244e-10 *x*lens_ipow(y, 5) + 1.74454e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2)*dy + -6.9093e-10 *lens_ipow(x, 5)*y + 5.61984e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dy + 5.36518e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx + 2.72246e-11 *lens_ipow(x, 7)*dy+0.0f;
const float dx31 =  + -0.0358346  + 0.0171271 *lambda + -0.0140934 *lens_ipow(lambda, 2) + -0.0299414 *lens_ipow(dy, 2) + -0.01177 *lens_ipow(dx, 2) + 0.00053456 *y*dy + -0.000103122 *lens_ipow(y, 2) + 0.000296267 *x*dx + -3.45233e-05 *lens_ipow(x, 2) + 5.48145e-05 *lens_ipow(y, 2)*lambda + 1.97249e-05 *lens_ipow(x, 2)*lambda + 0.00978365 *lens_ipow(dx, 4) + -4.50436e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.19457e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -4.50025e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 1.73014e-08 *lens_ipow(y, 5)*dy + 1.43849e-08 *x*lens_ipow(y, 4)*dx + -1.78811e-09 *lens_ipow(x, 2)*lens_ipow(y, 4) + -1.15155e-10 *lens_ipow(x, 6) + -2.01891e-12 *lens_ipow(y, 8) + 5.61984e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy + 3.21911e-10 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx+0.0f;
const float dx32 =  + -0.988809 *dx*dy + -0.02354 *y*dx + -0.0216017 *x*dy + 0.000296267 *x*y + 0.0391346 *y*lens_ipow(dx, 3) + -1.8001e-07 *lens_ipow(y, 5)*dx + 2.87698e-09 *x*lens_ipow(y, 5) + 8.72272e-06 *lens_ipow(x, 4)*dx*dy + 1.07304e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)+0.0f;
const float dx33 =  + 0.396192  + -1.45744 *lens_ipow(dy, 2) + -0.494404 *lens_ipow(dx, 2) + -0.0598827 *y*dy + 0.00026728 *lens_ipow(y, 2) + -0.0216017 *x*dx + -9.00871e-05 *lens_ipow(x, 2)*y*dy + -4.7783e-07 *lens_ipow(y, 5)*dy + 2.88356e-09 *lens_ipow(y, 6) + 4.36136e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 1.40496e-10 *lens_ipow(x, 4)*lens_ipow(y, 4) + 3.40308e-12 *lens_ipow(x, 8)+0.0f;
const float dx34 =  + 0.0171271 *y + -0.0281868 *y*lambda + 1.82715e-05 *lens_ipow(y, 3) + 1.97249e-05 *lens_ipow(x, 2)*y+0.0f;
const float dx40 =  + -0.000379349 *dx*lens_ipow(lambda, 2) + 0.00497295 *dx*lens_ipow(dy, 2) + -2.62991e-07 *x*lens_ipow(y, 2) + 0.0209803 *lens_ipow(dx, 5) + 2.35775e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 4.7841e-05 *x*y*lens_ipow(dy, 3) + -9.24751e-07 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -2.56228e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -1.14442e-09 *lens_ipow(x, 5) + -1.04319e-11 *lens_ipow(x, 3)*lens_ipow(y, 4) + 0.00589536 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 4)+0.0f;
const float dx41 =  + -0.000376405 *dy*lens_ipow(lambda, 2) + 0.00490527 *lens_ipow(dx, 2)*dy + -2.62991e-07 *lens_ipow(x, 2)*y + 0.0206413 *lens_ipow(dy, 5) + -2.55287e-06 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -9.38537e-07 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -1.15578e-09 *lens_ipow(y, 5) + 4.71551e-05 *x*y*lens_ipow(dx, 3) + 2.39205e-05 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -1.04319e-11 *lens_ipow(x, 4)*lens_ipow(y, 3) + 0.00629191 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx42 =  + -0.795902 *dx*lens_ipow(dy, 2) + -0.64815 *lens_ipow(dx, 3) + 0.00981055 *y*dx*dy + -0.000379349 *x*lens_ipow(lambda, 2) + 0.00497295 *x*lens_ipow(dy, 2) + -0.328407 *lens_ipow(dx, 3)*lambda + -4.69269e-07 *lens_ipow(y, 4)*dx + 0.104901 *x*lens_ipow(dx, 4) + 7.07326e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.28114e-06 *lens_ipow(x, 4)*dx + -38.3454 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 0.00838921 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.00589536 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 4)+0.0f;
const float dx43 =  + -0.650329 *lens_ipow(dy, 3) + -0.795902 *lens_ipow(dx, 2)*dy + -0.000376405 *y*lens_ipow(lambda, 2) + 0.00490527 *y*lens_ipow(dx, 2) + 0.0099459 *x*dx*dy + -0.327931 *lens_ipow(dy, 3)*lambda + 0.103206 *y*lens_ipow(dy, 4) + -1.27644e-06 *lens_ipow(y, 4)*dy + 7.17615e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -4.62375e-07 *lens_ipow(x, 4)*dy + -38.3454 *lens_ipow(dx, 4)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.00629191 *lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 0.00786048 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const float dx44 =  + 0.608631  + -1.68017 *lambda + 1.22518 *lens_ipow(lambda, 2) + -0.00075281 *y*dy*lambda + -0.000758698 *x*dx*lambda + -0.0819828 *lens_ipow(dy, 4) + -0.0821018 *lens_ipow(dx, 4) + -19.1727 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lambda+0.0f;
} break;
