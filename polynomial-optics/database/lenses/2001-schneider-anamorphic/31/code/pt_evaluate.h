case schneider_anamorphic_2001_31mm:
{
out[0] =  + 31.4721 *dx + -1.24942 *x + -8.62363 *dx*lens_ipow(dy, 2) + -8.08154 *lens_ipow(dx, 3) + 1.92711 *x*lens_ipow(dx, 2)*lambda + 0.0965951 *lens_ipow(x, 2)*dx*lambda + 0.00100401 *lens_ipow(x, 3)*lambda + -12.7656 *x*lens_ipow(dx, 4) + -1.15776 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -0.000272352 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -0.0447099 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -5.65657e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.000873516 *lens_ipow(x, 4)*dx + -7.10532e-06 *lens_ipow(x, 5) + -0.0302932 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + -5.73157e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -8.65597e-09 *x*lens_ipow(y, 6) + -3.44891e-06 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -5.04907e-08 *lens_ipow(x, 3)*lens_ipow(y, 4) + -0.000489032 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy*lambda + -1.0078e-05 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lambda + -0.0220119 *x*lens_ipow(y, 3)*lens_ipow(dx, 4)*dy + -2.28423e-09 *x*lens_ipow(y, 7)*dy + -3.57035e-09 *lens_ipow(x, 7)*y*dy + -0.000571271 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -3.22394e-07 *lens_ipow(x, 6)*y*dx*dy*lambda + -6.60252e-09 *lens_ipow(y, 8)*lens_ipow(dx, 3) + -0.0354233 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4);
out[1] =  + 61.6535 *dy + -0.929108 *y + -32.9208 *lens_ipow(dy, 3) + -29.7135 *lens_ipow(dx, 2)*dy + -0.612 *y*lens_ipow(dy, 2) + -0.793736 *x*dx*dy*lambda + -0.002766 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.000686615 *lens_ipow(x, 2)*y*lens_ipow(lambda, 2) + -4.56655e-06 *lens_ipow(x, 4)*y + -3.33538e-08 *lens_ipow(y, 7) + -8.35234e-07 *x*lens_ipow(y, 5)*dx + -8.43292e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + 4.76629e-08 *lens_ipow(y, 7)*lambda + -0.0159298 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -2.01893e-06 *lens_ipow(x, 5)*y*dx*lambda + 1.86178e-06 *lens_ipow(y, 6)*dy*lens_ipow(lambda, 2) + -1.10874e-08 *lens_ipow(y, 8)*dy + -4.5589e-08 *lens_ipow(x, 2)*lens_ipow(y, 6)*dy + -4.54487e-08 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx + -2.75121e-10 *lens_ipow(x, 4)*lens_ipow(y, 5) + -1.5817e-08 *lens_ipow(x, 6)*y*lens_ipow(lambda, 2) + -8.21278e-11 *lens_ipow(y, 9)*lambda + -1.17121e-09 *lens_ipow(y, 9)*lens_ipow(dy, 2) + -8.82038e-09 *lens_ipow(x, 2)*lens_ipow(y, 7)*lens_ipow(dy, 2) + -1.473e-08 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx*dy + -4.83948e-09 *lens_ipow(x, 4)*lens_ipow(y, 5)*lens_ipow(dx, 2) + -1.19667e-10 *lens_ipow(x, 4)*lens_ipow(y, 6)*dy + -2.7797e-11 *lens_ipow(x, 8)*lens_ipow(y, 2)*dy;
out[2] =  + 0.293479 *dx + -0.0433309 *x + -0.000738011 *lens_ipow(x, 2)*dx + 2.10863e-05 *lens_ipow(x, 3)*lambda + 0.0292307 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.00162677 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + -8.60128e-08 *lens_ipow(x, 5) + -7.58294e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + -2.02014e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -4.40985e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -9.87928e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -0.00230272 *lens_ipow(x, 3)*lens_ipow(dx, 4) + -9.08377e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -1.47038e-09 *lens_ipow(x, 3)*lens_ipow(y, 4) + -0.000177774 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -5.21531e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2) + -4.07573e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -6.91901e-08 *lens_ipow(x, 6)*dx + 5.17608e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*lambda + -1.76835e-07 *lens_ipow(y, 6)*lens_ipow(dx, 3) + -8.4765e-13 *x*lens_ipow(y, 8) + -9.2759e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx + -5.45227e-13 *lens_ipow(x, 9) + 7.55821e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*lens_ipow(dy, 3)*lambda + -4.26747e-08 *lens_ipow(y, 7)*lens_ipow(dx, 3)*dy + -2.83241e-13 *x*lens_ipow(y, 9)*dy + 1.07121e-09 *lens_ipow(x, 2)*lens_ipow(y, 6)*lens_ipow(dx, 3) + -1.40982e-13 *lens_ipow(x, 9)*y*dy;
out[3] =  + -0.0161861 *y + -0.00360374 *dy*lambda + -0.00258321 *y*lens_ipow(dx, 2) + -2.89929e-06 *lens_ipow(y, 3) + -0.00319904 *x*dx*dy + -4.43202e-05 *lens_ipow(x, 2)*dy + -2.6502e-06 *lens_ipow(x, 2)*y + -0.000715848 *lens_ipow(y, 2)*dy*lambda + 7.67678e-06 *lens_ipow(y, 3)*lambda + -0.0345408 *y*lens_ipow(dy, 4) + 0.00123768 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -2.77182e-05 *lens_ipow(y, 4)*lens_ipow(dy, 3) + -1.25742e-06 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -1.93824e-08 *lens_ipow(y, 6)*dy + -1.07784e-10 *lens_ipow(y, 7) + -2.29357e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lambda + -3.03255e-09 *x*lens_ipow(y, 6)*dx*dy + -4.49879e-11 *x*lens_ipow(y, 7)*dx + -1.1516e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.20758e-12 *lens_ipow(x, 2)*lens_ipow(y, 7) + -1.99146e-12 *lens_ipow(x, 6)*lens_ipow(y, 3) + -0.0117512 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 6) + -8.96345e-13 *lens_ipow(y, 9)*lens_ipow(dx, 2) + -0.000543455 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -3.27775e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + 1.4906e-09 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -7.576e-13 *lens_ipow(x, 6)*lens_ipow(y, 4)*dy + -3.61168e-13 *lens_ipow(x, 7)*lens_ipow(y, 3)*dx;
out_transmittance =  + 0.191524  + 0.361439 *lambda + -0.243566 *lens_ipow(lambda, 2) + -0.0810706 *lens_ipow(dx, 2) + -0.00407108 *x*dx + -0.213413 *lens_ipow(dy, 2)*lambda + -0.00941468 *y*dy*lambda + -0.000764146 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -4.26506e-07 *lens_ipow(y, 4) + -0.00209159 *x*y*dx*dy + -6.03785e-05 *x*lens_ipow(y, 2)*dx + -0.000952859 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -2.26752e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00168104 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.11775e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -7.20214e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -2.01871e-07 *lens_ipow(x, 4)*y*dy + -4.46989e-09 *lens_ipow(x, 6) + -1.96065e-09 *lens_ipow(y, 7)*dy + -9.9893e-12 *lens_ipow(y, 8) + -2.12143e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dy, 2) + -9.33122e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.90923e-11 *lens_ipow(x, 4)*lens_ipow(y, 4) + -2.0423e-09 *lens_ipow(x, 7)*dx + -2.8273e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy*lambda + -2.52677e-10 *lens_ipow(y, 8)*lens_ipow(dy, 2) + -5.69299e-09 *lens_ipow(x, 7)*lens_ipow(dx, 3) + -3.37139e-10 *lens_ipow(x, 8)*lens_ipow(dx, 2);
} break;
