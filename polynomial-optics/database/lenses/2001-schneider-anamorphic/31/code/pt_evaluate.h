case schneider_anamorphic_2001_31mm:
{
out[0] =  + 31.8082 *dx + -1.23537 *x + -9.91225 *dx*lens_ipow(dy, 2) + -15.471 *lens_ipow(dx, 3) + -0.000205774 *x*lens_ipow(y, 2) + -0.0154073 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -0.000631676 *lens_ipow(x, 4)*dx + -7.10896e-06 *lens_ipow(x, 5) + 0.000359243 *lens_ipow(x, 4)*dx*lambda + 4.80768e-06 *lens_ipow(x, 5)*lambda + 0.102008 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -4.34602e-05 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -0.000211805 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -4.21218e-06 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -8.24076e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -5.7631e-06 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -7.99923e-08 *lens_ipow(x, 3)*lens_ipow(y, 4) + 0.0427392 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lambda;
out[1] =  + 61.049 *dy + -0.953977 *y + 0.0510768 *y*lambda + -16.2447 *lens_ipow(dy, 3) + -0.000313115 *lens_ipow(x, 2)*y + -364.164 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -3.66302e-06 *lens_ipow(x, 4)*y + -0.000534794 *lens_ipow(x, 3)*y*dx*lambda + -0.0554581 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.12917e-05 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -1.58772e-08 *lens_ipow(y, 7) + -1.68985e-06 *x*lens_ipow(y, 5)*dx + -0.0168704 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -3.27484e-06 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -5.47452e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -1.61274 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -2.93214e-06 *lens_ipow(y, 6)*dy*lambda + 0.00891428 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lambda;
out[2] =  + 0.294276 *dx + -0.0432053 *x + -0.0169962 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -3.88338e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -8.37588e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + -7.80635e-08 *lens_ipow(x, 5) + 9.1092e-08 *lens_ipow(x, 5)*lambda + -1.06519e-05 *lens_ipow(y, 4)*lens_ipow(dx, 3) + -1.22962e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -2.53998e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -5.61965e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -6.91443e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -1.01356e-09 *lens_ipow(x, 3)*lens_ipow(y, 4) + -8.82771e-09 *lens_ipow(x, 5)*y*dy + -3.47763e-08 *lens_ipow(x, 6)*dx + -2.5112e-10 *lens_ipow(x, 7) + -0.0104834 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -1.88293e-06 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lambda;
out[3] =  + -0.0162106 *y + -4.06389e-05 *lens_ipow(x, 2)*dy + 4.69628e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + -8.59992e-07 *lens_ipow(y, 4)*dy + 0.000664881 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -8.11642e-07 *lens_ipow(x, 3)*y*dx + -8.73015e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + -8.42142e-11 *lens_ipow(y, 7) + -4.9574e-07 *x*lens_ipow(y, 4)*dx*dy + -1.1358e-08 *x*lens_ipow(y, 5)*dx + -7.0029e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2) + -2.68054e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -2.97391e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -3.66062e-11 *lens_ipow(x, 6)*y + 0.000145295 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 5.9445e-06 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 3) + -8.50769e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2)*lambda + -2.14786e-08 *lens_ipow(y, 6)*dy*lambda;
out_transmittance =  + 0.189975  + 0.360881 *lambda + -0.244167 *lens_ipow(lambda, 2) + -0.00183336 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.00173719 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -7.34568e-05 *lens_ipow(y, 3)*dy + -0.036827 *x*dx*lens_ipow(dy, 2) + -0.00366526 *x*y*dx*dy + -0.00012353 *x*lens_ipow(y, 2)*dx + -0.00161881 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000104627 *lens_ipow(x, 2)*y*dy + -2.27292e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -4.06601e-09 *lens_ipow(y, 6) + -4.96369e-08 *lens_ipow(y, 6)*lens_ipow(dy, 2) + -1.16706e-09 *lens_ipow(y, 7)*dy + -5.97833e-08 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -1.94923e-09 *lens_ipow(x, 7)*dx + -1.58072e-11 *lens_ipow(x, 8);
} break;
