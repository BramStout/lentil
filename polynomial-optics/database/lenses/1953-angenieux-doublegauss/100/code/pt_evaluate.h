const float out_x =  + 99.0482 *dx + -0.606384 *x + 0.593166 *x*lambda + 1.06088 *dx*lambda + 0.00392189 *x*y*dy + -48.5105 *lens_ipow(dx, 3) + -0.422081 *x*lens_ipow(lambda, 2) + -46.9432 *dx*lens_ipow(dy, 2) + -0.000314401 *x*lens_ipow(y, 2) + -0.000239753 *lens_ipow(x, 3) + 0.2425 *x*lens_ipow(dy, 2) + 0.00318953 *lens_ipow(y, 2)*dx + 0.211985 *x*lens_ipow(dx, 2)*lambda + 0.000116327 *x*lens_ipow(y, 2)*lambda + 0.0162928 *lens_ipow(x, 2)*dx*lambda + 2.53345 *x*lens_ipow(dx, 4) + 37.991 *lens_ipow(dx, 5) + 29.7718 *dx*lens_ipow(dy, 4) + 4.25018 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 0.117375 *x*y*lens_ipow(dx, 2)*dy*lambda + 3.05549 *y*lens_ipow(dx, 3)*dy*lambda + 114.385 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 2.70561 *y*dx*lens_ipow(dy, 3)*lambda + 0.195688 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.174217 *lens_ipow(x, 2)*lens_ipow(dx, 5) + 0.199023 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4)*lambda + 0.26768 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -7.90581e-05 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 5);
const float out_y =  + -0.615568 *y + 99.0341 *dy + 1.07734 *dy*lambda + 0.613505 *y*lambda + 0.240035 *y*lens_ipow(dx, 2) + 0.0039041 *x*y*dx + -46.8003 *lens_ipow(dx, 2)*dy + -0.432397 *y*lens_ipow(lambda, 2) + -0.000241589 *lens_ipow(x, 2)*y + -0.000233404 *lens_ipow(y, 3) + 0.00328022 *lens_ipow(x, 2)*dy + -48.6925 *lens_ipow(dy, 3) + 0.202037 *y*lens_ipow(dy, 2)*lambda + 0.0163519 *lens_ipow(y, 2)*dy*lambda + 1.49664 *x*lens_ipow(dx, 3)*dy + 38.9169 *lens_ipow(dy, 5) + 2.56474 *y*lens_ipow(dy, 4) + 28.984 *lens_ipow(dx, 4)*dy + 115.638 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 4.36412 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 3.06362 *x*dx*lens_ipow(dy, 3)*lambda + 0.117856 *x*y*dx*lens_ipow(dy, 2)*lambda + 0.131711 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.113267 *lens_ipow(x, 2)*lens_ipow(dx, 4)*dy + 0.175126 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 0.203267 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -8.12667e-05 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 5) + -3.84957e-15 *lens_ipow(x, 4)*lens_ipow(y, 7);
const float out_dx =  + -0.610878 *dx + -0.00635209 *x + -0.00344005 *x*lambda + 0.00725679 *dx*lambda + -2.99306e-05 *x*y*dy + -3.98322e-05 *lens_ipow(x, 2)*dx + 0.280311 *lens_ipow(dx, 3) + 0.0023866 *x*lens_ipow(lambda, 2) + 1.63786e-06 *x*lens_ipow(y, 2) + 1.72274e-06 *lens_ipow(x, 3) + -0.00104249 *x*lens_ipow(dy, 2) + 0.555934 *dx*lens_ipow(dy, 2)*lambda + -0.00356735 *x*lens_ipow(dx, 4) + -0.182417 *lens_ipow(dx, 5) + -0.49354 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.000103975 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 6.70325e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.000122482 *x*y*lens_ipow(dy, 3) + 6.3498e-06 *lens_ipow(x, 2)*y*dx*dy + 0.000189896 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 2.68629e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.148049 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000339661 *x*y*lens_ipow(dx, 2)*dy*lambda + 0.000397502 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + 1.42466e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 3.73663e-09 *lens_ipow(y, 5)*dx*dy + 4.5138e-05 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(lambda, 2) + -8.72709e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4)*lambda;
const float out_dy =  + -0.00637173 *y + -0.624157 *dy + 0.0456478 *dy*lambda + -0.00340738 *y*lambda + -0.00177599 *y*lens_ipow(dx, 2) + -3.38122e-05 *lens_ipow(y, 2)*dy + 0.00185104 *x*dx*dy + -2.87514e-05 *x*y*dx + 0.417591 *lens_ipow(dx, 2)*dy + 0.00236802 *y*lens_ipow(lambda, 2) + 1.82639e-06 *lens_ipow(x, 2)*y + -0.0324662 *dy*lens_ipow(lambda, 2) + 1.70422e-06 *lens_ipow(y, 3) + 0.305991 *lens_ipow(dy, 3) + 2.55092e-06 *x*lens_ipow(y, 2)*dx*dy + -0.629532 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.243999 *lens_ipow(dy, 5) + 5.60702e-05 *x*y*lens_ipow(dx, 3) + 0.000178177 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 0.000149917 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.347258 *lens_ipow(dx, 4)*dy + -4.87916e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 1.42628e-05 *lens_ipow(y, 3)*lens_ipow(dy, 4) + -0.0394256 *y*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -0.0145111 *y*lens_ipow(dy, 6) + -1.48971e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 4)*lambda + -0.36068 *x*lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.00194489 *lens_ipow(x, 2)*lens_ipow(dx, 6)*dy;
const float out_transmittance =  + 0.238449  + 0.854223 *lambda + -1.75589e-06 *lens_ipow(x, 2) + -1.17022 *lens_ipow(lambda, 2) + 0.566184 *lens_ipow(lambda, 3) + -0.218043 *lens_ipow(dx, 4) + -0.00500031 *y*lens_ipow(dy, 3) + -0.00502322 *x*lens_ipow(dx, 3) + -0.179247 *lens_ipow(dy, 4) + -7.55927e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -9.75229e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000122169 *x*y*dx*dy + -0.00976566 *x*dx*lens_ipow(dy, 2)*lambda + -0.0940186 *lens_ipow(dy, 4)*lambda + -6.36589e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.00859308 *y*lens_ipow(dx, 2)*dy*lambda + -1.44888 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 1.02664 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.000138437 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -0.00143299 *lens_ipow(x, 2)*lens_ipow(dx, 6) + -0.000825338 *lens_ipow(y, 2)*lens_ipow(dy, 6) + -7.97573e-06 *lens_ipow(y, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -0.00316514 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4)*lambda + -0.343132 *lens_ipow(dx, 6)*lens_ipow(lambda, 3) + -0.00508804 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2)*lambda + -0.0123271 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.117385 *x*dx*lens_ipow(dy, 6)*lens_ipow(lambda, 3) + -0.000177164 *lens_ipow(x, 3)*lens_ipow(dx, 7)*lambda;
