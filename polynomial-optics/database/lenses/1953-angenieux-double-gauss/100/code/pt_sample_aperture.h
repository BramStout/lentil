case angenieux_double_gauss_1953_100mm:
{
float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  const float begin_lambda = lambda;
  pred_x =  + 53.368 *begin_dx + 0.154173 *begin_x + 13.3439 *begin_dx*begin_lambda + 0.26366 *begin_x*begin_lambda + -9.18561 *begin_dx*lens_ipow(begin_lambda, 2) + -33.2685 *begin_dx*lens_ipow(begin_dy, 2) + -33.5163 *lens_ipow(begin_dx, 3) + -0.022706 *begin_y*begin_dx*begin_dy + -0.180979 *begin_x*lens_ipow(begin_lambda, 2) + -0.173349 *begin_x*lens_ipow(begin_dy, 2) + -0.19424 *begin_x*lens_ipow(begin_dx, 2) + -0.000101075 *begin_x*lens_ipow(begin_y, 2) + -9.81721e-05 *lens_ipow(begin_x, 3) + 0.00133304 *lens_ipow(begin_y, 2)*begin_dx*begin_lambda + 0.00195819 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + 14.3695 *begin_dx*lens_ipow(begin_dy, 4) + 29.4852 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 15.7155 *lens_ipow(begin_dx, 5) + 0.00433777 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.266565 *begin_x*lens_ipow(begin_dy, 4) + 0.471407 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.27174 *begin_x*lens_ipow(begin_dx, 4) + 0.0125253 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.000129187 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + -9.4332e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + -0.011584 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.0105079 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -6.35762e-13 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4);
  pred_y =  + 53.3126 *begin_dy + 0.15413 *begin_y + 13.6022 *begin_dy*begin_lambda + 0.263764 *begin_y*begin_lambda + -9.40104 *begin_dy*lens_ipow(begin_lambda, 2) + -33.8532 *lens_ipow(begin_dy, 3) + -33.3318 *lens_ipow(begin_dx, 2)*begin_dy + -0.181196 *begin_y*lens_ipow(begin_lambda, 2) + -0.193336 *begin_y*lens_ipow(begin_dy, 2) + -0.17203 *begin_y*lens_ipow(begin_dx, 2) + -9.83005e-05 *lens_ipow(begin_y, 3) + -0.0225367 *begin_x*begin_dx*begin_dy + 0.000554925 *lens_ipow(begin_x, 2)*begin_dy + -0.000101 *lens_ipow(begin_x, 2)*begin_y + 0.00195325 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + 16.8773 *lens_ipow(begin_dy, 5) + 29.9523 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 14.5414 *lens_ipow(begin_dx, 4)*begin_dy + 0.267088 *begin_y*lens_ipow(begin_dy, 4) + 0.468686 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.260471 *begin_y*lens_ipow(begin_dx, 4) + -9.30644e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 0.0126359 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.00449158 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.0119848 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.000235998 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + -0.0213871 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5)*begin_lambda + -6.24227e-13 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5);
  pred_dx =  + 0.400517 *begin_dx + -0.017775 *begin_x + 0.00661073 *begin_x*begin_lambda + -0.513191 *begin_dx*lens_ipow(begin_dy, 2) + -0.534155 *lens_ipow(begin_dx, 3) + -0.00986115 *begin_y*begin_dx*begin_dy + -4.1723e-06 *lens_ipow(begin_y, 2)*begin_dx + -0.00460932 *begin_x*lens_ipow(begin_lambda, 2) + -0.00566489 *begin_x*lens_ipow(begin_dy, 2) + -0.0144193 *begin_x*lens_ipow(begin_dx, 2) + 5.96917e-05 *begin_x*begin_y*begin_dy + -2.84578e-06 *begin_x*lens_ipow(begin_y, 2) + 5.73835e-05 *lens_ipow(begin_x, 2)*begin_dx + -2.77618e-06 *lens_ipow(begin_x, 3) + 0.136714 *lens_ipow(begin_dx, 5) + 0.00407283 *begin_x*lens_ipow(begin_dy, 4) + -5.65199e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 0.460018 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + 7.66937e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_lambda + 0.00137659 *begin_x*begin_y*lens_ipow(begin_dx, 4)*begin_dy + -1.51957e-08 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + 4.07559e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + 4.66977e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx + -5.0735e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -1.69806e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + -0.0246534 *begin_x*lens_ipow(begin_dx, 6)*begin_lambda + -0.119174 *begin_y*begin_dx*lens_ipow(begin_dy, 7) + -0.00033189 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3);
  pred_dy =  + 0.39996 *begin_dy + -0.0177837 *begin_y + 0.00659246 *begin_y*begin_lambda + -0.534638 *lens_ipow(begin_dy, 3) + -0.511315 *lens_ipow(begin_dx, 2)*begin_dy + -0.00459732 *begin_y*lens_ipow(begin_lambda, 2) + -0.0142295 *begin_y*lens_ipow(begin_dy, 2) + -0.00556114 *begin_y*lens_ipow(begin_dx, 2) + 6.18206e-05 *lens_ipow(begin_y, 2)*begin_dy + -2.74258e-06 *lens_ipow(begin_y, 3) + -0.00985212 *begin_x*begin_dx*begin_dy + 5.95957e-05 *begin_x*begin_y*begin_dx + -2.7188e-06 *lens_ipow(begin_x, 2)*begin_y + 0.141089 *lens_ipow(begin_dy, 5) + 0.00390896 *begin_y*lens_ipow(begin_dx, 4) + -4.08383e-06 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2) + -6.09963e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 0.464899 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 7.95309e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_lambda + -1.8148e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -5.40831e-09 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + 0.00151584 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4) + 3.66968e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -0.0247426 *begin_y*lens_ipow(begin_dy, 6)*begin_lambda + -0.117182 *begin_x*lens_ipow(begin_dx, 7)*begin_dy + -0.00030277 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 1.44063e-12 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 4)*begin_dy + -2.109e-11 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dx, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 53.368  + 13.3439 *begin_lambda + -9.18561 *lens_ipow(begin_lambda, 2) + -33.2685 *lens_ipow(begin_dy, 2) + -100.549 *lens_ipow(begin_dx, 2) + -0.022706 *begin_y*begin_dy + -0.38848 *begin_x*begin_dx + 0.00133304 *lens_ipow(begin_y, 2)*begin_lambda + 0.00195819 *lens_ipow(begin_x, 2)*begin_lambda + 14.3695 *lens_ipow(begin_dy, 4) + 88.4555 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 78.5776 *lens_ipow(begin_dx, 4) + 0.00433777 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 0.942814 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 1.08696 *begin_x*lens_ipow(begin_dx, 3) + 0.0250505 *begin_x*begin_y*begin_dx*begin_dy + -0.000129187 *lens_ipow(begin_x, 2)*begin_y*begin_dy + -0.000188664 *lens_ipow(begin_x, 3)*begin_dx + -0.011584 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -0.0315237 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[0][1] =  + -66.537 *begin_dx*begin_dy + -0.022706 *begin_y*begin_dx + -0.346699 *begin_x*begin_dy + 57.4779 *begin_dx*lens_ipow(begin_dy, 3) + 58.9703 *lens_ipow(begin_dx, 3)*begin_dy + 0.00867553 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + 1.06626 *begin_x*lens_ipow(begin_dy, 3) + 0.942814 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + 0.0125253 *begin_x*begin_y*lens_ipow(begin_dx, 2) + -0.000129187 *lens_ipow(begin_x, 2)*begin_y*begin_dx + -0.0231681 *lens_ipow(begin_x, 2)*begin_dx*begin_dy*begin_lambda+0.0f;
  dx1_domega0[1][0] =  + -66.6635 *begin_dx*begin_dy + -0.34406 *begin_y*begin_dx + -0.0225367 *begin_x*begin_dy + 59.9045 *begin_dx*lens_ipow(begin_dy, 3) + 58.1656 *lens_ipow(begin_dx, 3)*begin_dy + 0.937373 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + 1.04189 *begin_y*lens_ipow(begin_dx, 3) + 0.0126359 *begin_x*begin_y*lens_ipow(begin_dy, 2) + 0.00898316 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -0.0239696 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + -0.000235998 *begin_x*lens_ipow(begin_y, 2)*begin_dy*begin_lambda+0.0f;
  dx1_domega0[1][1] =  + 53.3126  + 13.6022 *begin_lambda + -9.40104 *lens_ipow(begin_lambda, 2) + -101.56 *lens_ipow(begin_dy, 2) + -33.3318 *lens_ipow(begin_dx, 2) + -0.386671 *begin_y*begin_dy + -0.0225367 *begin_x*begin_dx + 0.000554925 *lens_ipow(begin_x, 2) + 0.00195325 *lens_ipow(begin_y, 2)*begin_lambda + 84.3866 *lens_ipow(begin_dy, 4) + 89.8568 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 14.5414 *lens_ipow(begin_dx, 4) + 1.06835 *begin_y*lens_ipow(begin_dy, 3) + 0.937373 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.000186129 *lens_ipow(begin_y, 3)*begin_dy + 0.0252718 *begin_x*begin_y*begin_dx*begin_dy + 0.00449158 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.0119848 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + -0.000235998 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + -0.106935 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4)*begin_lambda+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
