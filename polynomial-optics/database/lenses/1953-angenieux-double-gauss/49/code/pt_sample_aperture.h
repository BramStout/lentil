case angenieux_double_gauss_1953_49mm:
{
float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  const float begin_lambda = lambda;
  pred_x =  + 26.1763 *begin_dx + 0.14819 *begin_x + 7.14375 *begin_dx*begin_lambda + 0.312482 *begin_x*begin_lambda + -5.001 *begin_dx*lens_ipow(begin_lambda, 2) + -15.0851 *begin_dx*lens_ipow(begin_dy, 2) + -16.001 *lens_ipow(begin_dx, 3) + -0.0582372 *begin_y*begin_dx*begin_dy + -0.238972 *begin_x*lens_ipow(begin_lambda, 2) + -0.131913 *begin_x*lens_ipow(begin_dy, 2) + -0.193622 *begin_x*lens_ipow(begin_dx, 2) + -0.000578872 *begin_x*lens_ipow(begin_y, 2) + -0.000548528 *lens_ipow(begin_x, 3) + 0.000183062 *begin_x*lens_ipow(begin_y, 2)*begin_lambda + 0.000199632 *lens_ipow(begin_x, 3)*begin_lambda + 4.35129 *lens_ipow(begin_dx, 5) + 0.0122646 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 2.06341e-05 *lens_ipow(begin_x, 4)*begin_dx*begin_lambda + 6.59632e-08 *begin_x*lens_ipow(begin_y, 5)*begin_dy + 1.17599e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dx + 0.000308291 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -1.18461e-09 *lens_ipow(begin_x, 7) + -0.216652 *begin_x*begin_y*lens_ipow(begin_dy, 7) + 0.00924303 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 6) + -2.25835e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + -0.00069423 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_dy, 4) + -2.9854e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2) + 8.82456e-14 *lens_ipow(begin_x, 9)*lens_ipow(begin_y, 2)*begin_lambda;
  pred_y =  + 26.2498 *begin_dy + 7.10235 *begin_dy*begin_lambda + 1.10029 *begin_y*begin_lambda + -4.89017 *begin_dy*lens_ipow(begin_lambda, 2) + -17.1237 *lens_ipow(begin_dy, 3) + -15.9578 *lens_ipow(begin_dx, 2)*begin_dy + -1.64836 *begin_y*lens_ipow(begin_lambda, 2) + -0.144102 *begin_y*lens_ipow(begin_dy, 2) + -0.175288 *begin_y*lens_ipow(begin_dx, 2) + -0.000420648 *lens_ipow(begin_y, 3) + -0.000493915 *lens_ipow(begin_x, 2)*begin_y + 0.846195 *begin_y*lens_ipow(begin_lambda, 3) + 8.01887 *lens_ipow(begin_dy, 5) + 0.290532 *begin_y*lens_ipow(begin_dx, 4) + -0.00096102 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.303622 *begin_x*begin_dx*lens_ipow(begin_dy, 3) + -0.00108222 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 0.013782 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + 4.44939e-06 *lens_ipow(begin_x, 4)*begin_dy + 98.4368 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + -2.41734e-09 *lens_ipow(begin_y, 7) + 1.62559e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 2) + -6.42878e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 1.80506e-09 *lens_ipow(begin_y, 7)*begin_lambda + -0.00170251 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + -0.000177481 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 5) + 1.05838e-06 *lens_ipow(begin_x, 5)*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -2.82609e-11 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3);
  pred_dx =  + 0.399111 *begin_dx + -0.038616 *begin_x + 0.0215778 *begin_x*begin_lambda + -0.476676 *begin_dx*lens_ipow(begin_dy, 2) + -0.493075 *lens_ipow(begin_dx, 3) + -0.0203792 *begin_y*begin_dx*begin_dy + -0.0156734 *begin_x*lens_ipow(begin_lambda, 2) + -0.0321441 *begin_x*lens_ipow(begin_dx, 2) + 0.000320303 *begin_x*begin_y*begin_dy + -2.12674e-05 *begin_x*lens_ipow(begin_y, 2) + -2.38626e-05 *lens_ipow(begin_x, 3) + -0.0155727 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + -7.57846e-08 *begin_x*lens_ipow(begin_y, 4) + 2.44141e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -4.50501e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 2.15213e-06 *lens_ipow(begin_x, 4)*begin_dx + 5.55619e-08 *begin_x*lens_ipow(begin_y, 4)*begin_lambda + -1.5126e-07 *lens_ipow(begin_y, 5)*begin_dx*begin_dy + 1.10916e-05 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 1.44143e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + 7.85968e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 3) + -8.34222e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 7.2326e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_lambda + -4.33492e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2) + -5.7693e-13 *lens_ipow(begin_x, 9) + 0.000879055 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + -3.04797e-15 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 8) + 1.5268e-15 *lens_ipow(begin_x, 11)*begin_lambda;
  pred_dy =  + 0.398051 *begin_dy + -0.0371845 *begin_y + 0.0186105 *begin_y*begin_lambda + -0.485786 *lens_ipow(begin_dy, 3) + -0.48389 *lens_ipow(begin_dx, 2)*begin_dy + -0.0147028 *begin_y*lens_ipow(begin_lambda, 2) + -0.0318391 *begin_y*lens_ipow(begin_dy, 2) + -0.0106145 *begin_y*lens_ipow(begin_dx, 2) + -3.36051e-05 *lens_ipow(begin_y, 3) + -0.0206358 *begin_x*begin_dx*begin_dy + -2.24237e-05 *lens_ipow(begin_x, 2)*begin_y + 1.47102e-05 *lens_ipow(begin_y, 3)*begin_lambda + 2.23892e-06 *lens_ipow(begin_y, 4)*begin_dy + 0.00165335 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 2.0047e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 2.57073e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 2.45443e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -7.64956e-08 *lens_ipow(begin_x, 4)*begin_y + 7.3364e-08 *lens_ipow(begin_x, 4)*begin_y*begin_lambda + 7.74259e-06 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 3) + -9.92696e-08 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2) + -7.20182e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + 6.81048e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*begin_dy + 5.63498e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*begin_lambda + -2.81022e-13 *lens_ipow(begin_y, 9) + -3.70598e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 1.48655e-14 *lens_ipow(begin_x, 10)*begin_dy + -2.87447e-17 *lens_ipow(begin_x, 8)*lens_ipow(begin_y, 5);
  Eigen::Matrix2f dx1_domega0;
  dx1_domega0(0, 0) =  + 26.1763  + 7.14375 *begin_lambda + -5.001 *lens_ipow(begin_lambda, 2) + -15.0851 *lens_ipow(begin_dy, 2) + -48.0029 *lens_ipow(begin_dx, 2) + -0.0582372 *begin_y*begin_dy + -0.387245 *begin_x*begin_dx + 21.7565 *lens_ipow(begin_dx, 4) + 0.0122646 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 2.06341e-05 *lens_ipow(begin_x, 4)*begin_lambda + 1.17599e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4) + 0.000616582 *lens_ipow(begin_x, 3)*begin_y*begin_dx*begin_dy + 0.0554582 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 5) + -0.00069423 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 4)+0.0f;
  dx1_domega0(0, 1) =  + -30.1702 *begin_dx*begin_dy + -0.0582372 *begin_y*begin_dx + -0.263826 *begin_x*begin_dy + 0.0245292 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + 6.59632e-08 *begin_x*lens_ipow(begin_y, 5) + 0.000308291 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_dx, 2) + -1.51656 *begin_x*begin_y*lens_ipow(begin_dy, 6) + -0.00277692 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_dy, 3)+0.0f;
  dx1_domega0(1, 0) =  + -31.9157 *begin_dx*begin_dy + -0.350576 *begin_y*begin_dx + 1.16213 *begin_y*lens_ipow(begin_dx, 3) + -0.303622 *begin_x*lens_ipow(begin_dy, 3) + -0.00108222 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 0.027564 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + 393.747 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -0.00340502 *lens_ipow(begin_y, 4)*begin_dx*lens_ipow(begin_dy, 3) + 1.05838e-06 *lens_ipow(begin_x, 5)*begin_y*lens_ipow(begin_dy, 2)+0.0f;
  dx1_domega0(1, 1) =  + 26.2498  + 7.10235 *begin_lambda + -4.89017 *lens_ipow(begin_lambda, 2) + -51.3712 *lens_ipow(begin_dy, 2) + -15.9578 *lens_ipow(begin_dx, 2) + -0.288205 *begin_y*begin_dy + 40.0943 *lens_ipow(begin_dy, 4) + -0.00192204 *lens_ipow(begin_y, 3)*begin_dy + -0.910867 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + -0.00108222 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 0.013782 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + 4.44939e-06 *lens_ipow(begin_x, 4) + 295.31 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -0.00510753 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -0.000887403 *lens_ipow(begin_x, 4)*lens_ipow(begin_dy, 4) + 2.11675e-06 *lens_ipow(begin_x, 5)*begin_y*begin_dx*begin_dy+0.0f;
  Eigen::Matrix2f invJ;
  const float invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2f dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
