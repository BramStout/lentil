case angenieux_double_gauss_test_low_degree_low_coefficients_9999_100mm:
{
out[0] =  + 99.6253 *dx + -0.612819 *x + 0.591016 *x*lambda + -38.4082 *dx*lens_ipow(dy, 2) + -38.4111 *lens_ipow(dx, 3) + 0.1689 *y*dx*dy + -0.407523 *x*lens_ipow(lambda, 2) + 0.29064 *x*lens_ipow(dy, 2) + 0.460483 *x*lens_ipow(dx, 2) + 0.00558501 *x*y*dy + -0.000247535 *x*lens_ipow(y, 2) + 0.00902979 *lens_ipow(x, 2)*dx + -0.000248469 *lens_ipow(x, 3) + 0.00623469 *lens_ipow(y, 2)*dx*lambda;
out[1] =  + 99.6623 *dy + -0.612999 *y + 0.577961 *y*lambda + -38.5652 *lens_ipow(dy, 3) + -38.4398 *lens_ipow(dx, 2)*dy + -0.383127 *y*lens_ipow(lambda, 2) + 0.458346 *y*lens_ipow(dy, 2) + 0.288674 *y*lens_ipow(dx, 2) + -0.000247733 *lens_ipow(y, 3) + 0.165022 *x*dx*dy + 0.0055095 *x*y*dx + 0.00332464 *lens_ipow(x, 2)*dy + -0.000249142 *lens_ipow(x, 2)*y + 0.0161747 *lens_ipow(y, 2)*dy*lambda;
out[2] =  + -0.6051 *dx + -0.00629425 *x + -0.00359449 *x*lambda + 0.235336 *lens_ipow(dx, 3) + 0.00254505 *x*lens_ipow(lambda, 2) + -0.00116404 *x*lens_ipow(dy, 2) + -2.17887e-05 *x*y*dy + 1.68674e-06 *x*lens_ipow(y, 2) + -3.36134e-05 *lens_ipow(x, 2)*dx + 1.78267e-06 *lens_ipow(x, 3) + 0.508465 *dx*lens_ipow(dy, 2)*lambda + -0.397888 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.000113728 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lambda + 0.000352478 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda;
out[3] =  + -0.611319 *dy + -0.00702857 *y + 0.0105567 *dy*lambda + -0.000818453 *y*lambda + 0.238585 *lens_ipow(dy, 3) + 0.336579 *lens_ipow(dx, 2)*dy + -3.0244e-05 *lens_ipow(y, 2)*dy + 1.74466e-06 *lens_ipow(y, 3) + 0.00192569 *x*dx*dy + -2.32218e-05 *x*y*dx + 1.74817e-06 *lens_ipow(x, 2)*y + -0.0200531 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.00017072 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 0.0241728 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3);
out_transmittance =  + 0.240858  + 0.845399 *lambda + -1.1589 *lens_ipow(lambda, 2) + 0.560249 *lens_ipow(lambda, 3) + -0.250335 *lens_ipow(dy, 4) + -0.46332 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.250803 *lens_ipow(dx, 4) + -0.00502705 *y*lens_ipow(dy, 3) + -0.00400387 *y*lens_ipow(dx, 2)*dy + -0.000122994 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.00401476 *x*dx*lens_ipow(dy, 2) + -0.00498555 *x*lens_ipow(dx, 3) + -0.000123777 *x*y*dx*dy + -0.000120986 *lens_ipow(x, 2)*lens_ipow(dx, 2);
} break;
