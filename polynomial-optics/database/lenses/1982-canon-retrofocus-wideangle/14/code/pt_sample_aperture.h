case canon__retrofocus_wideangle__1982__14mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 30.6704 *begin_dx + 0.615218 *begin_x + -0.0905149 *begin_x*begin_lambda + -0.375113 *begin_dx*begin_lambda + 2.78314 *begin_y*begin_dx*begin_dy + 0.0867423 *begin_x*begin_y*begin_dy + 0.139254 *lens_ipow(begin_x, 2)*begin_dx + 25.7829 *lens_ipow(begin_dx, 3) + 0.0614983 *begin_x*lens_ipow(begin_lambda, 2) + 27.8055 *begin_dx*lens_ipow(begin_dy, 2) + 0.00137595 *begin_x*lens_ipow(begin_y, 2) + 0.00142908 *lens_ipow(begin_x, 3) + 1.11093 *begin_x*lens_ipow(begin_dy, 2) + 3.81506 *begin_x*lens_ipow(begin_dx, 2) + 0.0484956 *lens_ipow(begin_y, 2)*begin_dx + -0.000230485 *lens_ipow(begin_x, 3)*begin_lambda + -0.0179786 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + -0.301572 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -0.000326963 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 0.148063 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*begin_lambda + 0.000212904 *lens_ipow(begin_x, 4)*begin_dx*begin_lambda + 0.00939915 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_lambda + 1.64013e-06 *lens_ipow(begin_x, 5)*begin_lambda + 7.07194e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dy*begin_lambda + -1.71042e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 39.2573 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + 4.17497e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 2) + 1.20478e-08 *begin_x*lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2)*begin_lambda;
  pred_y =  + 0.611816 *begin_y + 30.6644 *begin_dy + -0.372275 *begin_dy*begin_lambda + -0.0760021 *begin_y*begin_lambda + 1.09382 *begin_y*lens_ipow(begin_dx, 2) + 0.140663 *lens_ipow(begin_y, 2)*begin_dy + 3.95291 *begin_y*lens_ipow(begin_dy, 2) + 2.7734 *begin_x*begin_dx*begin_dy + 0.086057 *begin_x*begin_y*begin_dx + 27.7602 *lens_ipow(begin_dx, 2)*begin_dy + 0.0490308 *begin_y*lens_ipow(begin_lambda, 2) + 0.00135816 *lens_ipow(begin_x, 2)*begin_y + 0.00143467 *lens_ipow(begin_y, 3) + 0.0483889 *lens_ipow(begin_x, 2)*begin_dy + 26.0794 *lens_ipow(begin_dy, 3) + -0.622678 *begin_y*lens_ipow(begin_dy, 2)*begin_lambda + -0.027974 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -0.000317849 *lens_ipow(begin_y, 3)*begin_lambda + 0.000463158 *lens_ipow(begin_y, 4)*begin_dy*begin_lambda + 0.0286159 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*begin_lambda + 2.92368e-06 *lens_ipow(begin_y, 5)*begin_lambda + 9.91681 *begin_y*lens_ipow(begin_dy, 4)*begin_lambda + 0.840873 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 0.00601163 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 9.60607e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5) + -5.08146e-06 *begin_x*lens_ipow(begin_y, 4)*begin_dx*begin_dy + 3.73959e-06 *lens_ipow(begin_x, 5)*begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 5.5858e-08 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2);
  pred_dx =  + -0.0329172 *begin_x + -0.00246223 *begin_x*begin_lambda + -0.164109 *begin_dx*begin_lambda + -0.0500813 *begin_y*begin_dx*begin_dy + 0.0016886 *begin_x*begin_y*begin_dy + 0.00188271 *lens_ipow(begin_x, 2)*begin_dx + -3.17741 *lens_ipow(begin_dx, 3) + -3.09699 *begin_dx*lens_ipow(begin_dy, 2) + 3.90147e-05 *begin_x*lens_ipow(begin_y, 2) + 3.78406e-05 *lens_ipow(begin_x, 3) + -0.0759841 *begin_x*lens_ipow(begin_dx, 2) + 0.000370273 *lens_ipow(begin_y, 2)*begin_dx + 0.0535155 *begin_dx*lens_ipow(begin_lambda, 2) + -0.0524233 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + -7.95488e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 0.0521369 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -1.5687e-08 *lens_ipow(begin_x, 5)*begin_lambda + 1.27713e-08 *lens_ipow(begin_x, 6)*begin_dx + 7.28396e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dy + 1.21728e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 1.30764e-10 *begin_x*lens_ipow(begin_y, 6) + 2.28049e-10 *lens_ipow(begin_x, 7) + -0.0584659 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -1.18556e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 2.69337e-12 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4) + 6.95255e-08 *lens_ipow(begin_x, 5)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 1.20048e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.00314855 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 6)*begin_lambda;
  pred_dy =  + -0.0330367 *begin_y + -0.159663 *begin_dy*begin_lambda + -0.00218597 *begin_y*begin_lambda + 0.00198094 *lens_ipow(begin_y, 2)*begin_dy + -0.0755324 *begin_y*lens_ipow(begin_dy, 2) + -0.0483512 *begin_x*begin_dx*begin_dy + 0.00182299 *begin_x*begin_y*begin_dx + -2.99728 *lens_ipow(begin_dx, 2)*begin_dy + 4.00708e-05 *lens_ipow(begin_x, 2)*begin_y + 4.20257e-05 *lens_ipow(begin_y, 3) + 0.000370524 *lens_ipow(begin_x, 2)*begin_dy + -3.11911 *lens_ipow(begin_dy, 3) + -0.0490625 *begin_y*lens_ipow(begin_dx, 2)*begin_lambda + 0.0739363 *begin_dy*lens_ipow(begin_lambda, 3) + -1.02895e-05 *lens_ipow(begin_y, 3)*begin_lambda + 3.27928e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 0.0501246 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -0.000520915 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 3) + 3.00943e-10 *lens_ipow(begin_y, 7) + 2.60253e-08 *lens_ipow(begin_y, 6)*begin_dy + -7.64256e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 5.34584e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2) + -82.2327 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + 3.50743e-05 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 1.98611 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2)*begin_lambda + 9.23251e-15 *lens_ipow(begin_x, 8)*lens_ipow(begin_y, 3) + 4.07049e-13 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 3)*begin_dx + 4.41553e-15 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 7);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 30.6704  + -0.375113 *begin_lambda + 2.78314 *begin_y*begin_dy + 0.139254 *lens_ipow(begin_x, 2) + 77.3487 *lens_ipow(begin_dx, 2) + 27.8055 *lens_ipow(begin_dy, 2) + 7.63012 *begin_x*begin_dx + 0.0484956 *lens_ipow(begin_y, 2) + -0.0179786 *lens_ipow(begin_x, 2)*begin_lambda + -0.603145 *begin_x*begin_dx*lens_ipow(begin_lambda, 2) + -0.000326963 *lens_ipow(begin_x, 2)*begin_y*begin_dy + 0.444188 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_lambda + 0.000212904 *lens_ipow(begin_x, 4)*begin_lambda + 0.0187983 *lens_ipow(begin_x, 3)*begin_dx*begin_lambda + -1.71042e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + 78.5146 *begin_x*begin_dx*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + 2.40956e-08 *begin_x*lens_ipow(begin_y, 6)*begin_dx*begin_lambda+0.0f;
  dx1_domega0(0, 1) =  + 2.78314 *begin_y*begin_dx + 0.0867423 *begin_x*begin_y + 55.6109 *begin_dx*begin_dy + 2.22185 *begin_x*begin_dy + -0.000326963 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 7.07194e-06 *begin_x*lens_ipow(begin_y, 3)*begin_lambda + -1.71042e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 2) + 157.029 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 0) =  + 2.18764 *begin_y*begin_dx + 2.7734 *begin_x*begin_dy + 0.086057 *begin_x*begin_y + 55.5204 *begin_dx*begin_dy + 0.0120233 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + -5.08146e-06 *begin_x*lens_ipow(begin_y, 4)*begin_dy + 3.73959e-06 *lens_ipow(begin_x, 5)*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 1) =  + 30.6644  + -0.372275 *begin_lambda + 0.140663 *lens_ipow(begin_y, 2) + 7.90582 *begin_y*begin_dy + 2.7734 *begin_x*begin_dx + 27.7602 *lens_ipow(begin_dx, 2) + 0.0483889 *lens_ipow(begin_x, 2) + 78.2382 *lens_ipow(begin_dy, 2) + -1.24536 *begin_y*begin_dy*begin_lambda + -0.027974 *lens_ipow(begin_y, 2)*begin_lambda + 0.000463158 *lens_ipow(begin_y, 4)*begin_lambda + 0.0572317 *lens_ipow(begin_y, 3)*begin_dy*begin_lambda + 39.6672 *begin_y*lens_ipow(begin_dy, 3)*begin_lambda + 2.52262 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 0.0120233 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)*begin_dy + -5.08146e-06 *begin_x*lens_ipow(begin_y, 4)*begin_dx + 7.47918e-06 *lens_ipow(begin_x, 5)*begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 1.11716e-07 *lens_ipow(begin_x, 6)*begin_y*begin_dy*lens_ipow(begin_lambda, 2)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
