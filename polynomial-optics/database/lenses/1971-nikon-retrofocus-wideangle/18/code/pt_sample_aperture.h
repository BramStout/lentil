case nikon__retrofocus_wideangle__1971__18mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 23.6777 *begin_dx + 0.767079 *begin_x + -0.0268957 *begin_x*begin_lambda + 6.17727 *begin_dx*lens_ipow(begin_dy, 2) + 6.21552 *lens_ipow(begin_dx, 3) + 1.28056 *begin_y*begin_dx*begin_dy + 0.0376437 *lens_ipow(begin_y, 2)*begin_dx + 0.0178444 *begin_x*lens_ipow(begin_lambda, 2) + 0.793056 *begin_x*lens_ipow(begin_dy, 2) + 2.07123 *begin_x*lens_ipow(begin_dx, 2) + 0.0857218 *begin_x*begin_y*begin_dy + 0.00199391 *begin_x*lens_ipow(begin_y, 2) + 0.122466 *lens_ipow(begin_x, 2)*begin_dx + 0.00196572 *lens_ipow(begin_x, 3) + -0.932744 *begin_x*begin_y*lens_ipow(begin_dx, 4)*begin_dy + -0.0203429 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4) + -0.0429042 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*begin_dy + -0.000893076 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 6.79567e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4) + 4.96732e-06 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + 3.62668e-06 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2) + 3.40153e-07 *lens_ipow(begin_x, 6)*begin_dx + 6.99584e-09 *lens_ipow(begin_x, 7) + 0.00105374 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 0.0388024 *lens_ipow(begin_x, 2)*begin_y*begin_dx*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -0.000146955 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -4.66581e-06 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -0.0144348 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4);
  pred_y =  + 23.6918 *begin_dy + 0.764022 *begin_y + -0.0100602 *begin_y*begin_lambda + 5.95729 *lens_ipow(begin_dy, 3) + 6.52437 *lens_ipow(begin_dx, 2)*begin_dy + 2.02401 *begin_y*lens_ipow(begin_dy, 2) + 0.740725 *begin_y*lens_ipow(begin_dx, 2) + 0.119836 *lens_ipow(begin_y, 2)*begin_dy + 0.00191576 *lens_ipow(begin_y, 3) + 1.30319 *begin_x*begin_dx*begin_dy + 0.0817787 *begin_x*begin_y*begin_dx + 0.0378362 *lens_ipow(begin_x, 2)*begin_dy + 0.00190972 *lens_ipow(begin_x, 2)*begin_y + -0.0415398 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.0448266 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0045402 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 1.81186e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 55.1 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + 2.97975e-07 *lens_ipow(begin_y, 6)*begin_dy + 9.04063e-09 *lens_ipow(begin_y, 7) + -0.000233597 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + 6.69182e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + 1.52186e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3) + -0.37456 *begin_dy*lens_ipow(begin_lambda, 7) + -0.000204576 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 5) + -4.70675e-12 *lens_ipow(begin_y, 9) + 6.74734e-10 *lens_ipow(begin_x, 7)*begin_y*begin_dx + 2.06939e-11 *lens_ipow(begin_x, 8)*begin_y;
  pred_dx =  + 1.42234 *begin_dx + 0.00366689 *begin_x + -1.19371 *begin_dx*begin_lambda + -0.0392866 *begin_x*begin_lambda + 0.820941 *begin_dx*lens_ipow(begin_lambda, 2) + 3.65846 *begin_dx*lens_ipow(begin_dy, 2) + 3.60516 *lens_ipow(begin_dx, 3) + 0.285492 *begin_y*begin_dx*begin_dy + 0.00689169 *lens_ipow(begin_y, 2)*begin_dx + 0.0268294 *begin_x*lens_ipow(begin_lambda, 2) + 0.155794 *begin_x*lens_ipow(begin_dy, 2) + 0.436544 *begin_x*lens_ipow(begin_dx, 2) + 0.0143115 *begin_x*begin_y*begin_dy + 0.000335486 *begin_x*lens_ipow(begin_y, 2) + 0.0206641 *lens_ipow(begin_x, 2)*begin_dx + 0.000320255 *lens_ipow(begin_x, 3) + -0.000114909 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 1.16106e-07 *lens_ipow(begin_x, 5) + 1.52614e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4) + 0.000110735 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.00662141 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 0.00287835 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -1.87334e-05 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + -9.43759e-10 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + -1.71723e-11 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2)*begin_lambda + -7.08745e-10 *lens_ipow(begin_y, 8)*lens_ipow(begin_dx, 3) + 1.02023e-05 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + 1.02921e-11 *lens_ipow(begin_x, 9)*lens_ipow(begin_dy, 2);
  pred_dy =  + 1.18048 *begin_dy + -0.00413318 *begin_y + -0.288389 *begin_dy*begin_lambda + -0.00974924 *begin_y*begin_lambda + 3.53742 *lens_ipow(begin_dy, 3) + 3.67823 *lens_ipow(begin_dx, 2)*begin_dy + 0.431233 *begin_y*lens_ipow(begin_dy, 2) + 0.153885 *begin_y*lens_ipow(begin_dx, 2) + 0.0204051 *lens_ipow(begin_y, 2)*begin_dy + 0.000313727 *lens_ipow(begin_y, 3) + 0.297291 *begin_x*begin_dx*begin_dy + 0.0142816 *begin_x*begin_y*begin_dx + 0.00723187 *lens_ipow(begin_x, 2)*begin_dy + 0.000336312 *lens_ipow(begin_x, 2)*begin_y + -0.000131134 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 1.36571e-07 *lens_ipow(begin_y, 5) + -0.000323313 *lens_ipow(begin_x, 3)*begin_dx*begin_dy*begin_lambda + -9.68002e-06 *lens_ipow(begin_x, 4)*begin_dy*begin_lambda + 0.0685546 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4) + 0.0216159 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 2.3375e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 5.43373e-06 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 4) + -0.0021056 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -0.000113354 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3)*begin_dy + -1.36793e-06 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3) + 3.22452e-12 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 3) + -156.868 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 7)*begin_lambda + -6.14228e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)*begin_lambda;
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 23.6777  + 6.17727 *lens_ipow(begin_dy, 2) + 18.6466 *lens_ipow(begin_dx, 2) + 1.28056 *begin_y*begin_dy + 0.0376437 *lens_ipow(begin_y, 2) + 4.14246 *begin_x*begin_dx + 0.122466 *lens_ipow(begin_x, 2) + -3.73097 *begin_x*begin_y*lens_ipow(begin_dx, 3)*begin_dy + -0.0813717 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.128713 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.00267923 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 7.25336e-06 *lens_ipow(begin_x, 5)*begin_dx + 3.40153e-07 *lens_ipow(begin_x, 6) + 0.00105374 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 0.0388024 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -0.000440865 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + -1.39974e-05 *lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(0, 1) =  + 12.3545 *begin_dx*begin_dy + 1.28056 *begin_y*begin_dx + 1.58611 *begin_x*begin_dy + 0.0857218 *begin_x*begin_y + -0.932744 *begin_x*begin_y*lens_ipow(begin_dx, 4) + -0.0429042 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3) + 9.93464e-06 *lens_ipow(begin_x, 5)*begin_dy + 0.00210748 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + 0.116407 *lens_ipow(begin_x, 2)*begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.000146955 *lens_ipow(begin_y, 5)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -0.0577393 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4)+0.0f;
  dx1_domega0(1, 0) =  + 13.0487 *begin_dx*begin_dy + 1.48145 *begin_y*begin_dx + 1.30319 *begin_x*begin_dy + 0.0817787 *begin_x*begin_y + -0.0830795 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.0448266 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -0.0045402 *begin_x*lens_ipow(begin_y, 2)*begin_dy + 220.4 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -0.00070079 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + 6.69182e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + 6.74734e-10 *lens_ipow(begin_x, 7)*begin_y+0.0f;
  dx1_domega0(1, 1) =  + 23.6918  + 17.8719 *lens_ipow(begin_dy, 2) + 6.52437 *lens_ipow(begin_dx, 2) + 4.04802 *begin_y*begin_dy + 0.119836 *lens_ipow(begin_y, 2) + 1.30319 *begin_x*begin_dx + 0.0378362 *lens_ipow(begin_x, 2) + -0.0415398 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0896533 *begin_x*begin_y*begin_dx*begin_dy + -0.0045402 *begin_x*lens_ipow(begin_y, 2)*begin_dx + 165.3 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 2.97975e-07 *lens_ipow(begin_y, 6) + -0.37456 *lens_ipow(begin_lambda, 7) + -0.00102288 *lens_ipow(begin_y, 4)*lens_ipow(begin_dy, 4)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
