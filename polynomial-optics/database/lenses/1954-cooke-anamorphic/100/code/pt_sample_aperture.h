case cooke_anamorphic_1954_100mm:
{
float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  const float begin_lambda = lambda;
  pred_x =  + 47.6584 *begin_dx + 0.937613 *begin_x + 0.0893812 *begin_x*begin_lambda + 4.20096 *begin_dx*begin_lambda + -2.83632 *begin_y*begin_dx*begin_dy + -0.0547221 *begin_x*begin_y*begin_dy + -104.57 *lens_ipow(begin_dx, 3) + -109.637 *begin_dx*lens_ipow(begin_dy, 2) + -0.000408792 *begin_x*lens_ipow(begin_y, 2) + -1.77898 *begin_x*lens_ipow(begin_dy, 2) + -0.0183395 *lens_ipow(begin_y, 2)*begin_dx + -37.6423 *begin_x*lens_ipow(begin_dx, 2)*begin_lambda + -192.197 *lens_ipow(begin_dx, 3)*begin_lambda + -0.00442832 *lens_ipow(begin_x, 3)*begin_lambda + -0.613822 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + -0.000143489 *lens_ipow(begin_x, 4)*begin_dx + 0.00389404 *lens_ipow(begin_x, 3)*lens_ipow(begin_lambda, 2) + 32.9374 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -1.38259e-06 *lens_ipow(begin_x, 5) + -0.00371455 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 1.18972 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 3) + -1.26086e-07 *lens_ipow(begin_x, 5)*begin_y*begin_dy + -5.63497e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + -0.729554 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 4) + -2.79463e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx + -8.00047 *begin_dx*lens_ipow(begin_lambda, 7) + 334.055 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 5) + -0.165046 *begin_x*lens_ipow(begin_lambda, 7);
  pred_y =  + 0.530478 *begin_y + 35.9657 *begin_dy + 5.4834 *begin_dy*begin_lambda + 0.0864972 *begin_y*begin_lambda + -1.83727 *begin_y*lens_ipow(begin_dx, 2) + -0.029353 *lens_ipow(begin_y, 2)*begin_dy + -2.70308 *begin_y*lens_ipow(begin_dy, 2) + -5.3588 *begin_x*begin_dx*begin_dy + -0.0680939 *begin_x*begin_y*begin_dx + -147.386 *lens_ipow(begin_dx, 2)*begin_dy + -0.0589897 *begin_y*lens_ipow(begin_lambda, 2) + -0.000661932 *lens_ipow(begin_x, 2)*begin_y + -3.69976 *begin_dy*lens_ipow(begin_lambda, 2) + -0.000138807 *lens_ipow(begin_y, 3) + -0.0530305 *lens_ipow(begin_x, 2)*begin_dy + -81.7688 *lens_ipow(begin_dy, 3) + -0.000301658 *lens_ipow(begin_y, 4)*begin_dy + -0.676003 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -1.5937e-06 *lens_ipow(begin_y, 5) + -0.0217948 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -9.99048e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -8.35568e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -0.000434344 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -0.114583 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 4) + -0.011158 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + -6.49134e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3) + -2.08893e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + -2.23623e-05 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dy, 4);
  pred_dx =  + 0.786396 *begin_dx + -0.0049494 *begin_x + 0.000713546 *begin_x*begin_lambda + -0.145925 *begin_y*begin_dx*begin_dy + -0.00409311 *begin_x*begin_y*begin_dy + -0.00435144 *lens_ipow(begin_x, 2)*begin_dx + 3.65329 *lens_ipow(begin_dx, 3) + -5.40863e-05 *begin_x*lens_ipow(begin_y, 2) + -6.61299e-05 *lens_ipow(begin_x, 3) + -0.0387079 *begin_x*lens_ipow(begin_dy, 2) + -0.00197046 *lens_ipow(begin_y, 2)*begin_dx + 2.99687e-05 *lens_ipow(begin_x, 3)*begin_lambda + -5.67248 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -0.177389 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -1.03578e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dy + -0.000618955 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 577.077 *lens_ipow(begin_dx, 5)*begin_lambda + 1.11245 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*begin_lambda + 42.4326 *begin_x*lens_ipow(begin_dx, 4)*begin_lambda + 0.0110577 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_lambda + -4.63366e-07 *lens_ipow(begin_x, 5)*begin_lambda + -1.2033e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy*begin_lambda + -8.98036e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 2) + -1.85648e-08 *begin_x*lens_ipow(begin_y, 6)*lens_ipow(begin_dx, 2) + -8.92886e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 2) + -1.82978e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + -2.23865e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -1.14731e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 6)*begin_dx;
  pred_dy =  + -0.0238319 *begin_y + 0.279203 *begin_dy + 0.00476919 *begin_y*begin_lambda + -0.0931587 *begin_y*lens_ipow(begin_dx, 2) + -0.00304012 *lens_ipow(begin_y, 2)*begin_dy + -0.132561 *begin_y*lens_ipow(begin_dy, 2) + -0.0247564 *begin_x*begin_dx*begin_dy + -0.00488897 *begin_x*begin_y*begin_dx + 2.02591 *lens_ipow(begin_dx, 2)*begin_dy + -0.00330426 *begin_y*lens_ipow(begin_lambda, 2) + -6.48607e-05 *lens_ipow(begin_x, 2)*begin_y + -2.74919e-05 *lens_ipow(begin_y, 3) + -0.00130651 *lens_ipow(begin_x, 2)*begin_dy + 1.05773 *begin_y*lens_ipow(begin_dx, 4) + -5.00059e-05 *lens_ipow(begin_y, 4)*begin_dy + 0.0455703 *begin_x*begin_y*lens_ipow(begin_dx, 3) + -0.142221 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 0.000473322 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + -2.34161e-07 *lens_ipow(begin_y, 5) + -0.00411629 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -6.23901e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -7.01257e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + -1.53082e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -0.00130057 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -7.8764e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3) + -7.37648e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + -1.17473e-07 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dy, 2) + -6.34355e-06 *lens_ipow(begin_x, 5)*begin_y*begin_dx*lens_ipow(begin_dy, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 47.6584  + 4.20096 *begin_lambda + -2.83632 *begin_y*begin_dy + -313.71 *lens_ipow(begin_dx, 2) + -109.637 *lens_ipow(begin_dy, 2) + -0.0183395 *lens_ipow(begin_y, 2) + -75.2846 *begin_x*begin_dx*begin_lambda + -576.591 *lens_ipow(begin_dx, 2)*begin_lambda + -0.613822 *lens_ipow(begin_x, 2)*begin_lambda + -0.000143489 *lens_ipow(begin_x, 4) + 65.8747 *begin_x*begin_dx*lens_ipow(begin_lambda, 2) + -0.00742911 *lens_ipow(begin_x, 3)*begin_dx + 1.18972 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 3) + -0.729554 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 4) + -2.79463e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2) + -8.00047 *lens_ipow(begin_lambda, 7) + 1002.16 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 5)+0.0f;
  dx1_domega0[0][1] =  + -2.83632 *begin_y*begin_dx + -0.0547221 *begin_x*begin_y + -219.274 *begin_dx*begin_dy + -3.55795 *begin_x*begin_dy + -1.26086e-07 *lens_ipow(begin_x, 5)*begin_y+0.0f;
  dx1_domega0[1][0] =  + -3.67454 *begin_y*begin_dx + -5.3588 *begin_x*begin_dy + -0.0680939 *begin_x*begin_y + -294.771 *begin_dx*begin_dy + -9.99048e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy + -8.35568e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + -0.000868689 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx + -0.458333 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 3) + -0.0334741 *begin_x*lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2)+0.0f;
  dx1_domega0[1][1] =  + 35.9657  + 5.4834 *begin_lambda + -0.029353 *lens_ipow(begin_y, 2) + -5.40617 *begin_y*begin_dy + -5.3588 *begin_x*begin_dx + -147.386 *lens_ipow(begin_dx, 2) + -3.69976 *lens_ipow(begin_lambda, 2) + -0.0530305 *lens_ipow(begin_x, 2) + -245.307 *lens_ipow(begin_dy, 2) + -0.000301658 *lens_ipow(begin_y, 4) + -2.02801 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -0.0435895 *lens_ipow(begin_y, 3)*begin_dy + -9.99048e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx + -2.08893e-06 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2) + -8.94494e-05 *lens_ipow(begin_x, 6)*begin_y*lens_ipow(begin_dy, 3)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
