case cooke_anamorphic_1954_100mm:
{
const float dx00 =  + 0.0505018  + 0.0398901 *lambda + 0.230489 *y*dy + 0.167112 *x*dx + 0.00195603 *lens_ipow(y, 2) + 0.00202193 *lens_ipow(x, 2) + 4.62051 *lens_ipow(dx, 2) + 15.5772 *lens_ipow(dy, 2)*lambda + -1.10506 *y*lens_ipow(dx, 2)*dy + 0.000121431 *lens_ipow(x, 3)*dx + -9.6459e-07 *lens_ipow(y, 4) + 0.000314278 *x*lens_ipow(y, 2)*dx + 0.000347267 *lens_ipow(x, 2)*y*dy + -16.8984 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.338811 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 1.38976e-07 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1.68286 *x*lens_ipow(dx, 5) + 8.94631e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx+0.0f;
const float dx01 =  + 10.554 *dx*dy + 0.230489 *x*dy + 0.00391205 *x*y + 0.178772 *y*dx + -1.10506 *x*lens_ipow(dx, 2)*dy + -34.1744 *lens_ipow(dx, 3)*dy + -3.85836e-06 *x*lens_ipow(y, 3) + 0.000314278 *lens_ipow(x, 2)*y*dx + 0.000115756 *lens_ipow(x, 3)*dy + -0.770171 *y*dx*lens_ipow(dy, 2) + 0.677622 *x*y*lens_ipow(dx, 4) + 5.55904e-08 *lens_ipow(x, 5)*y + 4.47315e-06 *lens_ipow(x, 4)*y*dx + 230.207 *y*lens_ipow(dx, 7)+0.0f;
const float dx02 =  + 45.3046  + 10.554 *y*dy + 0.0835558 *lens_ipow(x, 2) + 204.947 *lens_ipow(dx, 2) + 9.24102 *x*dx + 0.0893859 *lens_ipow(y, 2) + 1.28778 *lens_ipow(lambda, 2) + 681.922 *lens_ipow(dy, 2)*lambda + -2.21013 *x*y*dx*dy + 3.03577e-05 *lens_ipow(x, 4) + -102.523 *y*lens_ipow(dx, 2)*dy + 0.000157139 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.385085 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -762.166 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 1.35524 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -4.20715 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 2.23658e-06 *lens_ipow(x, 4)*lens_ipow(y, 2) + 805.724 *lens_ipow(y, 2)*lens_ipow(dx, 6)+0.0f;
const float dx03 =  + 10.554 *y*dx + 0.230489 *x*y + 31.1544 *x*dy*lambda + 1363.84 *dx*dy*lambda + -1.10506 *x*y*lens_ipow(dx, 2) + -34.1744 *y*lens_ipow(dx, 3) + 0.000115756 *lens_ipow(x, 3)*y + -0.770171 *lens_ipow(y, 2)*dx*dy + -33.7968 *x*dy*lens_ipow(lambda, 3) + -1524.33 *dx*dy*lens_ipow(lambda, 3)+0.0f;
const float dx04 =  + 0.0398901 *x + 2.57555 *dx*lambda + 15.5772 *x*lens_ipow(dy, 2) + 681.922 *dx*lens_ipow(dy, 2) + -50.6952 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2286.5 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx10 =  + 0.417173 *y*dx + 0.00907912 *x*y + 3.09766 *x*dy*lambda + 144.568 *dx*dy*lambda + -265.276 *dx*dy*lens_ipow(lambda, 2) + 0.0154924 *lens_ipow(y, 2)*dx*dy + 0.000485294 *lens_ipow(y, 3)*dx + -0.140706 *y*lens_ipow(dx, 3) + -3.9168e-06 *lens_ipow(x, 3)*y + -5.68598 *x*dy*lens_ipow(lambda, 2) + 3.43307 *x*dy*lens_ipow(lambda, 3) + 160.047 *dx*dy*lens_ipow(lambda, 3)+0.0f;
const float dx11 =  + -0.147579 *lambda + 9.65698 *lens_ipow(dx, 2) + 0.646305 *y*dy + 15.7728 *lens_ipow(dy, 2) + 0.417173 *x*dx + 0.00453956 *lens_ipow(x, 2) + 0.00560283 *lens_ipow(y, 2) + 0.0890778 *lens_ipow(lambda, 3) + 0.0309848 *x*y*dx*dy + 0.00150108 *lens_ipow(y, 3)*dy + 0.00145588 *x*lens_ipow(y, 2)*dx + -0.140706 *x*lens_ipow(dx, 3) + 7.74703 *y*lens_ipow(dy, 3) + 0.0525356 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -9.79201e-07 *lens_ipow(x, 4) + -9.6144e-06 *lens_ipow(y, 4) + 0.252729 *lens_ipow(y, 2)*lens_ipow(dy, 2)+0.0f;
const float dx12 =  + 19.314 *y*dx + 0.417173 *x*y + 1167.9 *dx*dy + 144.568 *x*dy*lambda + -265.276 *x*dy*lens_ipow(lambda, 2) + 0.0154924 *x*lens_ipow(y, 2)*dy + 0.000485294 *x*lens_ipow(y, 3) + -0.422119 *x*y*lens_ipow(dx, 2) + 0.0350237 *lens_ipow(y, 3)*dx + 160.047 *x*dy*lens_ipow(lambda, 3)+0.0f;
const float dx13 =  + 108.616  + -30.7931 *lambda + 0.323152 *lens_ipow(y, 2) + 31.5456 *y*dy + 583.948 *lens_ipow(dx, 2) + 20.489 *lens_ipow(lambda, 2) + 903.028 *lens_ipow(dy, 2) + 1.54883 *lens_ipow(x, 2)*lambda + 144.568 *x*dx*lambda + -265.276 *x*dx*lens_ipow(lambda, 2) + 0.0154924 *x*lens_ipow(y, 2)*dx + 0.000375269 *lens_ipow(y, 4) + 11.6205 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.84299 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.168486 *lens_ipow(y, 3)*dy + 1.71653 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 160.047 *x*dx*lens_ipow(lambda, 3)+0.0f;
const float dx14 =  + -30.7931 *dy + -0.147579 *y + 40.9779 *dy*lambda + 1.54883 *lens_ipow(x, 2)*dy + 0.267233 *y*lens_ipow(lambda, 2) + 144.568 *x*dx*dy + -530.552 *x*dx*dy*lambda + -5.68598 *lens_ipow(x, 2)*dy*lambda + 5.1496 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + 480.14 *x*dx*dy*lens_ipow(lambda, 2)+0.0f;
const float dx20 =  + -0.0247778  + -0.00107602 *lambda + -0.00523143 *y*dy + -0.00270466 *x*dx + -4.25139e-05 *lens_ipow(y, 2) + -4.55295e-05 *lens_ipow(x, 2) + -0.0478267 *lens_ipow(dx, 2) + -3.23399e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.453335 *lens_ipow(dx, 4) + 0.04609 *x*lens_ipow(dx, 3) + -0.000600987 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 3.25178e-08 *lens_ipow(y, 4) + -3.60531e-05 *x*lens_ipow(y, 2)*dx + -2.85689e-05 *lens_ipow(x, 2)*y*dy + -1.25429 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00190812 *x*y*dx*dy + 0.000766365 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 1.47608 *lens_ipow(dy, 2)*lens_ipow(lambda, 3)+0.0f;
const float dx21 =  + -0.224009 *dx*dy + -0.00523143 *x*dy + -8.50278e-05 *x*y + -0.00393817 *y*dx + -2.156e-07 *lens_ipow(x, 3)*y + 1.03439 *lens_ipow(dx, 3)*dy + -0.00120197 *x*y*lens_ipow(dx, 2) + 1.30071e-07 *x*lens_ipow(y, 3) + -0.000348981 *lens_ipow(y, 2)*dx*dy + -3.60531e-05 *lens_ipow(x, 2)*y*dx + -9.52297e-06 *lens_ipow(x, 3)*dy + -0.000954062 *lens_ipow(x, 2)*dx*dy+0.0f;
const float dx22 =  + -2.15435  + -0.224009 *y*dy + -0.00135233 *lens_ipow(x, 2) + 2.45244 *lens_ipow(dx, 2) + -0.0956533 *x*dx + -0.00196908 *lens_ipow(y, 2) + -0.0212488 *lens_ipow(lambda, 3) + -1.54981 *lens_ipow(dx, 2)*lambda + -10.3917 *lens_ipow(dy, 2)*lambda + 1.81334 *x*lens_ipow(dx, 3) + 0.069135 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 3.10316 *y*lens_ipow(dx, 2)*dy + -0.00120197 *x*lens_ipow(y, 2)*dx + -0.000116327 *lens_ipow(y, 3)*dy + -1.80265e-05 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000954062 *lens_ipow(x, 2)*y*dy + 0.00051091 *lens_ipow(x, 3)*dx + 41.0533 *lens_ipow(dy, 2)*lens_ipow(lambda, 7)+0.0f;
const float dx23 =  + -0.224009 *y*dx + -0.00523143 *x*y + -20.7834 *dx*dy*lambda + 1.03439 *y*lens_ipow(dx, 3) + -0.000116327 *lens_ipow(y, 3)*dx + -9.52297e-06 *lens_ipow(x, 3)*y + -2.50858 *x*dy*lens_ipow(lambda, 2) + -0.000954062 *lens_ipow(x, 2)*y*dx + 2.95216 *x*dy*lens_ipow(lambda, 3) + 82.1067 *dx*dy*lens_ipow(lambda, 7)+0.0f;
const float dx24 =  + -0.00107602 *x + -0.0637465 *dx*lens_ipow(lambda, 2) + -0.516604 *lens_ipow(dx, 3) + -10.3917 *dx*lens_ipow(dy, 2) + -2.50858 *x*lens_ipow(dy, 2)*lambda + 4.42824 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 287.373 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 6)+0.0f;
const float dx30 =  + 0.00508672 *lens_ipow(y, 2)*dx*dy + 77.3019 *dx*lens_ipow(dy, 3) + 1.60372 *y*dx*lens_ipow(dy, 2) + 1.95031 *x*lens_ipow(dy, 3) + 0.000102132 *x*lens_ipow(y, 2)*dy + 0.034474 *x*y*lens_ipow(dy, 2) + 7.3523e-07 *lens_ipow(y, 5)*dx + -78.6639 *x*lens_ipow(dy, 5) + 1.49875e-08 *x*lens_ipow(y, 5) + -211477 *dx*lens_ipow(dy, 7) + -0.722629 *lens_ipow(y, 3)*dx*lens_ipow(dy, 4) + -0.0215217 *x*lens_ipow(y, 3)*lens_ipow(dy, 4) + 4.77319e-11 *x*lens_ipow(y, 8)*dy + -4.25963e-07 *lens_ipow(y, 7)*dx*lens_ipow(dy, 2)+0.0f;
const float dx31 =  + -0.00921651  + -0.0013627 *lambda + 0.00743483 *y*dy + 0.123824 *lens_ipow(dy, 2) + 4.82992e-05 *lens_ipow(y, 2) + 0.0101734 *x*y*dx*dy + 1.60372 *x*dx*lens_ipow(dy, 2) + 0.238032 *y*lens_ipow(dy, 3) + 0.217322 *y*lens_ipow(dx, 2)*dy + 35.2487 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000102132 *lens_ipow(x, 2)*y*dy + 0.017237 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.581862 *lens_ipow(y, 2)*lens_ipow(dy, 4) + 8.88647e-05 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 3.67615e-06 *x*lens_ipow(y, 4)*dx + 3.74687e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -2.16789 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + -0.0322825 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 4) + 1.90927e-10 *lens_ipow(x, 2)*lens_ipow(y, 7)*dy + 0.013997 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -2.98174e-06 *x*lens_ipow(y, 6)*dx*lens_ipow(dy, 2)+0.0f;
const float dx32 =  + 0.00508672 *x*lens_ipow(y, 2)*dy + 3200.56 *dx*lens_ipow(dy, 3) + 77.3019 *x*lens_ipow(dy, 3) + 1.60372 *x*y*lens_ipow(dy, 2) + 0.217322 *lens_ipow(y, 2)*dx*dy + 70.4974 *y*dx*lens_ipow(dy, 2) + 3.55459e-05 *lens_ipow(y, 5)*dx + 7.3523e-07 *x*lens_ipow(y, 5) + -211477 *x*lens_ipow(dy, 7) + -0.722629 *x*lens_ipow(y, 3)*lens_ipow(dy, 4) + 0.00466566 *lens_ipow(y, 6)*dx*lens_ipow(dy, 3) + -4.25963e-07 *x*lens_ipow(y, 7)*lens_ipow(dy, 2)+0.0f;
const float dx33 =  + 0.933852  + -0.163446 *lambda + 0.00371741 *lens_ipow(y, 2) + 0.247648 *y*dy + 0.00508672 *x*lens_ipow(y, 2)*dx + 4800.84 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 231.906 *x*dx*lens_ipow(dy, 2) + 3.20745 *x*y*dx*dy + 0.357048 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.108661 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 70.4974 *y*lens_ipow(dx, 2)*dy + 2.92547 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 5.1066e-05 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.034474 *lens_ipow(x, 2)*y*dy + 0.775816 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -196.66 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -1.48034e+06 *x*dx*lens_ipow(dy, 6) + -2.89051 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 3) + -0.0430434 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 3) + 2.38659e-11 *lens_ipow(x, 2)*lens_ipow(y, 8) + 0.00699848 *lens_ipow(y, 6)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -8.51927e-07 *x*lens_ipow(y, 7)*dx*dy+0.0f;
const float dx34 =  + -0.163446 *dy + -0.0013627 *y+0.0f;
const float dx40 =  + 0.00887147 *dx + 0.000198062 *x + -4.10089 *lens_ipow(dx, 3) + -0.00148006 *x*y*dy + -0.000599113 *lens_ipow(y, 2)*dx + -1.32753e-05 *x*lens_ipow(y, 2) + -0.246726 *x*lens_ipow(dx, 2) + -0.00506547 *lens_ipow(x, 2)*dx + -2.08671 *dx*lens_ipow(dy, 2) + -3.55028e-05 *lens_ipow(x, 3) + -0.0682791 *y*dx*dy + -0.0435597 *x*lens_ipow(dy, 2)+0.0f;
const float dx41 =  + 0.00377883 *dy + 7.57529e-05 *y + -0.901392 *lens_ipow(dy, 3) + -0.0271268 *y*lens_ipow(dx, 2) + -0.000740032 *lens_ipow(x, 2)*dy + -0.00119823 *x*y*dx + -1.32753e-05 *lens_ipow(x, 2)*y + -5.92986e-06 *lens_ipow(y, 3) + -1.58808 *lens_ipow(dx, 2)*dy + -0.0510381 *y*lens_ipow(dy, 2) + -0.0682791 *x*dx*dy + -0.000956415 *lens_ipow(y, 2)*dy+0.0f;
const float dx42 =  + 0.00887147 *x + 0.399958 *dx + -209.308 *lens_ipow(dx, 3) + -0.0271268 *lens_ipow(y, 2)*dx + -12.3027 *x*lens_ipow(dx, 2) + -100.194 *dx*lens_ipow(dy, 2) + -0.000599113 *x*lens_ipow(y, 2) + -0.246726 *lens_ipow(x, 2)*dx + -3.17615 *y*dx*dy + -0.00168849 *lens_ipow(x, 3) + -2.08671 *x*lens_ipow(dy, 2) + -0.0682791 *x*y*dy+0.0f;
const float dx43 =  + 0.00377883 *y + -2.70418 *y*lens_ipow(dy, 2) + -100.194 *lens_ipow(dx, 2)*dy + -0.000740032 *lens_ipow(x, 2)*y + -1.58808 *y*lens_ipow(dx, 2) + -0.0510381 *lens_ipow(y, 2)*dy + -4.17341 *x*dx*dy + -0.0682791 *x*y*dx + -0.0435597 *lens_ipow(x, 2)*dy + -0.000318805 *lens_ipow(y, 3) + -484179 *lens_ipow(dy, 7)+0.0f;
const float dx44 =  + 0.832387  + -2.28595 *lambda + 1.65955 *lens_ipow(lambda, 2)+0.0f;
} break;
