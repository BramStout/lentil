case cooke_anamorphic_1954_100mm:
{
const float dx00 =  + 0.0547915  + 0.0335861 *lambda + 0.229037 *y*dy + 0.169168 *x*dx + 0.00195235 *lens_ipow(y, 2) + 0.00172222 *lens_ipow(x, 2) + 4.61926 *lens_ipow(dx, 2) + 15.2135 *lens_ipow(dy, 2)*lambda + 0.000479749 *lens_ipow(x, 2)*lambda + -1.22395e-06 *lens_ipow(y, 4) + -16.0613 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.0212403 *x*dx*lens_ipow(lambda, 3) + 0.147476 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 0.00267363 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 0.090353 *x*y*lens_ipow(dx, 3)*dy + -5.56904 *x*lens_ipow(dx, 5) + 5.30513e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + 3.43769e-10 *lens_ipow(x, 6)*lens_ipow(y, 2)+0.0f;
const float dx01 =  + 10.3378 *dx*dy + 0.229037 *x*dy + 0.00390469 *x*y + 0.18172 *y*dx + -4.89581e-06 *x*lens_ipow(y, 3) + 0.0130618 *lens_ipow(y, 2)*dx*dy + 0.294952 *x*y*lens_ipow(dx, 4) + 0.0451765 *lens_ipow(x, 2)*lens_ipow(dx, 3)*dy + 2.65257e-06 *lens_ipow(x, 4)*y*dx + 9.82196e-11 *lens_ipow(x, 7)*y + 85.7066 *y*lens_ipow(dx, 7)+0.0f;
const float dx02 =  + 45.1299  + 1.03222 *lambda + 10.3378 *y*dy + 0.0845842 *lens_ipow(x, 2) + 197.44 *lens_ipow(dx, 2) + 9.23851 *x*dx + 0.0908599 *lens_ipow(y, 2) + 647.528 *lens_ipow(dy, 2)*lambda + 0.00435393 *lens_ipow(y, 3)*dy + -683.245 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.0106202 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 0.589905 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.00200523 *lens_ipow(x, 4)*lens_ipow(dx, 2) + 0.13553 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 15278.2 *lens_ipow(dx, 6) + -13.9226 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 1.32628e-06 *lens_ipow(x, 4)*lens_ipow(y, 2) + 299.973 *lens_ipow(y, 2)*lens_ipow(dx, 6)+0.0f;
const float dx03 =  + 10.3378 *y*dx + 0.229037 *x*y + 30.427 *x*dy*lambda + 1295.06 *dx*dy*lambda + 0.00435393 *lens_ipow(y, 3)*dx + -32.1226 *x*dy*lens_ipow(lambda, 3) + -1366.49 *dx*dy*lens_ipow(lambda, 3) + 0.0451765 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)+0.0f;
const float dx04 =  + 0.0335861 *x + 1.03222 *dx + 15.2135 *x*lens_ipow(dy, 2) + 0.000159916 *lens_ipow(x, 3) + 647.528 *dx*lens_ipow(dy, 2) + -48.1839 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2049.74 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.0318605 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2)+0.0f;
const float dx10 =  + 257.352 *dx*dy*lens_ipow(lambda, 2) + 0.093356 *x*y*lens_ipow(lambda, 2) + 4.43444 *y*dx*lens_ipow(lambda, 2) + 5.5147 *x*dy*lens_ipow(lambda, 2) + -4.16713e-06 *lens_ipow(x, 3)*y*lambda + -6.49275 *x*dy*lens_ipow(lambda, 3) + -0.109424 *x*y*lens_ipow(lambda, 3) + -303.169 *dx*dy*lens_ipow(lambda, 3) + -1.58158e-05 *x*lens_ipow(y, 3)*lambda + 0.0237244 *lens_ipow(y, 2)*dx*dy*lambda + -5.2461 *y*dx*lens_ipow(lambda, 3)+0.0f;
const float dx11 =  + -0.14262 *lambda + 0.682761 *y*dy + 16.5558 *lens_ipow(dy, 2) + 0.00630986 *lens_ipow(y, 2) + 0.046678 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 4.91043 *y*lens_ipow(dy, 3) + 107.674 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 4.43444 *x*dx*lens_ipow(lambda, 2) + -1.90865e-05 *lens_ipow(y, 4) + 0.146955 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -127.742 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -1.04178e-06 *lens_ipow(x, 4)*lambda + -0.054712 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + -2.37236e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 0.0474488 *x*y*dx*dy*lambda + -5.2461 *x*dx*lens_ipow(lambda, 3) + 0.458288 *lens_ipow(lambda, 8) + 0.00786004 *lens_ipow(y, 4)*lens_ipow(dx, 4)*lambda+0.0f;
const float dx12 =  + 257.352 *x*dy*lens_ipow(lambda, 2) + 215.348 *y*dx*lens_ipow(lambda, 2) + 4.43444 *x*y*lens_ipow(lambda, 2) + 11559.8 *dx*dy*lens_ipow(lambda, 2) + -255.483 *y*dx*lens_ipow(lambda, 3) + -13610 *dx*dy*lens_ipow(lambda, 3) + -303.169 *x*dy*lens_ipow(lambda, 3) + 0.0237244 *x*lens_ipow(y, 2)*dy*lambda + -5.2461 *x*y*lens_ipow(lambda, 3) + 0.00628803 *lens_ipow(y, 5)*lens_ipow(dx, 3)*lambda+0.0f;
const float dx13 =  + 107.555  + -20.8297 *lambda + 0.341381 *lens_ipow(y, 2) + 33.1115 *y*dy + 936 *lens_ipow(dy, 2) + 257.352 *x*dx*lens_ipow(lambda, 2) + 17.8295 *lens_ipow(lambda, 4) + 7.36564 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 2.75735 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 5779.89 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.09797 *lens_ipow(y, 3)*dy + -6805.01 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -3.24637 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + -303.169 *x*dx*lens_ipow(lambda, 3) + 0.0237244 *x*lens_ipow(y, 2)*dx*lambda+0.0f;
const float dx14 =  + -20.8297 *dy + -0.14262 *y + 514.704 *x*dx*dy*lambda + 0.093356 *lens_ipow(x, 2)*y*lambda + 71.3179 *dy*lens_ipow(lambda, 3) + 215.348 *y*lens_ipow(dx, 2)*lambda + 8.86888 *x*y*dx*lambda + 5.5147 *lens_ipow(x, 2)*dy*lambda + 11559.8 *lens_ipow(dx, 2)*dy*lambda + -383.225 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -20415 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -1.04178e-06 *lens_ipow(x, 4)*y + -9.73912 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + -0.164136 *lens_ipow(x, 2)*y*lens_ipow(lambda, 2) + -909.507 *x*dx*dy*lens_ipow(lambda, 2) + -7.90788e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.0237244 *x*lens_ipow(y, 2)*dx*dy + -15.7383 *x*y*dx*lens_ipow(lambda, 2) + 3.6663 *y*lens_ipow(lambda, 7) + 0.00157201 *lens_ipow(y, 5)*lens_ipow(dx, 4)+0.0f;
const float dx20 =  + -0.0250214  + -0.000623142 *lambda + -0.00521228 *y*dy + -4.41954e-05 *lens_ipow(y, 2) + -0.107155 *lens_ipow(dx, 2)*lambda + -0.336599 *lens_ipow(dy, 2)*lambda + -9.75181e-05 *lens_ipow(x, 2)*lambda + -0.00523568 *x*dx*lambda + 3.06425e-05 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 4.12732e-08 *lens_ipow(y, 4) + -8.45617e-06 *x*lens_ipow(y, 2)*dx + 0.346503 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -3.47055e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.80912e-08 *lens_ipow(x, 5)*dx + -6.17382e-08 *x*lens_ipow(y, 4)*dx + -0.00211265 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 0.584062 *y*lens_ipow(dx, 4)*dy+0.0f;
const float dx21 =  + -0.221156 *dx*dy + -0.00521228 *x*dy + -8.83908e-05 *x*y + -0.00401778 *y*dx + 1.65093e-07 *x*lens_ipow(y, 3) + -0.000461499 *lens_ipow(y, 2)*dx*dy + -8.45617e-06 *lens_ipow(x, 2)*y*dx + 0.0159434 *y*lens_ipow(dx, 3) + -1.38822e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.000316542 *lens_ipow(y, 3)*lens_ipow(dx, 3) + -1.23476e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + 26.7011 *lens_ipow(dx, 5)*dy + 0.584062 *x*lens_ipow(dx, 4)*dy+0.0f;
const float dx22 =  + -2.15749  + -0.221156 *y*dy + 4.13812 *lens_ipow(dx, 2) + -0.00200889 *lens_ipow(y, 2) + -0.214311 *x*dx*lambda + -5.99287 *lens_ipow(dx, 2)*lambda + -0.00261784 *lens_ipow(x, 2)*lambda + -12.7866 *lens_ipow(dy, 2)*lambda + -0.000153833 *lens_ipow(y, 3)*dy + -4.22808e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.0239151 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 12.9437 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -6.94109e-06 *x*lens_ipow(y, 4)*dx + -3.0152e-09 *lens_ipow(x, 6) + -0.000237406 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -3.08691e-08 *lens_ipow(x, 2)*lens_ipow(y, 4) + -0.00281687 *lens_ipow(x, 3)*lens_ipow(dx, 3) + 133.505 *y*lens_ipow(dx, 4)*dy + 2.33625 *x*y*lens_ipow(dx, 3)*dy+0.0f;
const float dx23 =  + -0.221156 *y*dx + -0.00521228 *x*y + -0.673198 *x*dy*lambda + -25.5732 *dx*dy*lambda + -0.000153833 *lens_ipow(y, 3)*dx + 0.693006 *x*dy*lens_ipow(lambda, 3) + 25.8875 *dx*dy*lens_ipow(lambda, 3) + 26.7011 *y*lens_ipow(dx, 5) + 0.584062 *x*y*lens_ipow(dx, 4)+0.0f;
const float dx24 =  + -0.000623142 *x + -0.107155 *x*lens_ipow(dx, 2) + -1.99762 *lens_ipow(dx, 3) + -0.336599 *x*lens_ipow(dy, 2) + -3.2506e-05 *lens_ipow(x, 3) + -0.00261784 *lens_ipow(x, 2)*dx + -12.7866 *dx*lens_ipow(dy, 2) + 2.04284e-05 *lens_ipow(x, 3)*lambda + 1.03951 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 38.8312 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx30 =  + 0.00112035 *x*y*lens_ipow(lambda, 2) + 0.0535956 *y*dx*lens_ipow(lambda, 2) + 0.865866 *x*lens_ipow(dy, 3) + -0.00124549 *x*y*lens_ipow(lambda, 3) + 153.009 *dx*lens_ipow(dy, 3)*lambda + -0.0596003 *y*dx*lens_ipow(lambda, 3) + 0.0511834 *x*dy*lens_ipow(lambda, 4) + 2.37088 *dx*dy*lens_ipow(lambda, 4) + -401.059 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -1.13655e-11 *lens_ipow(x, 3)*lens_ipow(y, 5) + -9.59477 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 5)+0.0f;
const float dx31 =  + -0.0076263  + -0.00993046 *lambda + 0.0091384 *y*dy + 0.24853 *lens_ipow(dy, 2) + 0.00753626 *lens_ipow(lambda, 2) + 8.40836e-05 *lens_ipow(y, 2) + 0.000560175 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 1.3046 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.0535956 *x*dx*lens_ipow(lambda, 2) + -1.68197e-07 *lens_ipow(y, 4) + 0.000842462 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.45168 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.000622746 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + -0.0596003 *x*dx*lens_ipow(lambda, 3) + -0.489688 *y*lens_ipow(dx, 4)*dy + -1.42069e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)+0.0f;
const float dx32 =  + 2.6092 *y*dx*lens_ipow(lambda, 2) + 0.0535956 *x*y*lens_ipow(lambda, 2) + -2.90336 *y*dx*lens_ipow(lambda, 3) + 12134.7 *dx*lens_ipow(dy, 3)*lambda + 153.009 *x*lens_ipow(dy, 3)*lambda + -0.0596003 *x*y*lens_ipow(lambda, 3) + -0.979376 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + 108.084 *dx*dy*lens_ipow(lambda, 4) + -19674.6 *dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 2.37088 *x*dy*lens_ipow(lambda, 4) + -401.059 *x*lens_ipow(dy, 3)*lens_ipow(lambda, 3)+0.0f;
const float dx33 =  + 1.00242  + -0.316473 *lambda + 0.0045692 *lens_ipow(y, 2) + 0.497061 *y*dy + 1.2988 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.000561641 *lens_ipow(y, 3)*dy + 18202 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 459.028 *x*dx*lens_ipow(dy, 2)*lambda + -0.244844 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 54.0421 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -29511.9 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 94.597 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0255917 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + 2.37088 *x*dx*lens_ipow(lambda, 4) + -1203.18 *x*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -14.3922 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx34 =  + -0.316473 *dy + -0.00993046 *y + 0.0150725 *y*lambda + 0.00112035 *lens_ipow(x, 2)*y*lambda + 2.6092 *y*lens_ipow(dx, 2)*lambda + 0.107191 *x*y*dx*lambda + -4.35504 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 6067.33 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.00186824 *lens_ipow(x, 2)*y*lens_ipow(lambda, 2) + 153.009 *x*dx*lens_ipow(dy, 3) + -0.178801 *x*y*dx*lens_ipow(lambda, 2) + 216.168 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3) + -19674.6 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + 126.129 *lens_ipow(dy, 3)*lens_ipow(lambda, 3) + 0.102367 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 3) + 9.48353 *x*dx*dy*lens_ipow(lambda, 3) + -1203.18 *x*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -23.9869 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 4)+0.0f;
const float dx40 =  + -0.0226925 *dx + -0.000443737 *x + -0.00581064 *x*lens_ipow(dx, 2) + -0.000287932 *lens_ipow(x, 2)*dx + 2.95483 *dx*lens_ipow(dy, 2) + -3.42898e-06 *lens_ipow(x, 3) + 0.0574628 *x*lens_ipow(dy, 2) + -0.550793 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 0.00670806 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -2.02577e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + -28.4578 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00355084 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 4.18385e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -485.97 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000167391 *lens_ipow(y, 3)*dx*dy + -1.64296e-10 *x*lens_ipow(y, 6)+0.0f;
const float dx41 =  + -0.0110328 *dy + -0.000186261 *y + 0.15533 *lens_ipow(dx, 2)*dy + 0.0134161 *x*y*dx*lens_ipow(dy, 2) + -1.01289e-08 *lens_ipow(x, 4)*y + 4.18385e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 0.000502172 *x*lens_ipow(y, 2)*dx*dy + 0.187098 *lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -4.92889e-10 *lens_ipow(x, 2)*lens_ipow(y, 5)+0.0f;
const float dx42 =  + -0.0226925 *x + -1.1363 *dx + 145.358 *dx*lens_ipow(dy, 2) + -0.00581064 *lens_ipow(x, 2)*dx + 0.31066 *y*dx*dy + -9.59772e-05 *lens_ipow(x, 3) + 2.95483 *x*lens_ipow(dy, 2) + -0.183598 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 0.00670806 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -28.4578 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 4.18385e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -1457.91 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -23961.1 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000167391 *x*lens_ipow(y, 3)*dy + 0.249464 *lens_ipow(y, 3)*lens_ipow(dx, 3)*dy+0.0f;
const float dx43 =  + -0.0110328 *y + -0.818127 *dy + 145.358 *lens_ipow(dx, 2)*dy + 0.15533 *y*lens_ipow(dx, 2) + 5.90966 *x*dx*dy + 0.0574628 *lens_ipow(x, 2)*dy + -0.367195 *lens_ipow(x, 3)*dx*dy + 0.0134161 *x*lens_ipow(y, 2)*dx*dy + -28.4578 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -0.00177542 *lens_ipow(x, 4)*dy + -971.939 *x*lens_ipow(dx, 3)*dy + -11980.5 *lens_ipow(dx, 4)*dy + 0.000167391 *x*lens_ipow(y, 3)*dx + 0.062366 *lens_ipow(y, 3)*lens_ipow(dx, 4)+0.0f;
const float dx44 =  + 0.830007  + -2.27658 *lambda + 1.65041 *lens_ipow(lambda, 2)+0.0f;
} break;
